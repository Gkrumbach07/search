{"version":3,"sources":["lib/react-query.js","components/Elements/TabPanel/TabPanel.js","assets/thoth-logo.png","components/Elements/SearchBar/SearchBar.js","config/index.js","features/misc/api/getPackageMetadata.js","features/home/components/PackageSearch.js","features/home/api/postAdvise.js","features/home/components/ComboBox/ComboBox.js","features/home/components/AdviseCreation.js","features/home/routes/index.js","features/misc/routes/NotFound.js","components/Footer/Footer.js","components/Layout/MainLayout.js","components/Layout/AdviseLayout.js","components/Elements/InfoCard/InfoCard.js","components/Elements/IconText/IconText.js","features/advise/utils/formatLockfile.js","utils/timeSince.js","features/advise/utils/calcTime.js","features/advise/utils/discoverPackageChanges.js","features/advise/components/AdviseHeader/CustomAlert/CustomAlert.js","features/advise/components/AdviseHeader/AdviseHeader.js","components/Elements/ProgressBar/ProgressBar.js","features/advise/components/AdviseMetric/AdviseMetric.js","features/advise/components/CustomCardAction/CustomCardAction.js","features/advise/components/DependenciesMetric/DependenciesMetric.js","features/advise/components/LicenseMetric/LicenseGroup/LicenseGroup.js","features/advise/components/LicenseMetric/LicenseMetric.js","features/advise/components/AdviseTableView/utils.js","features/advise/components/AdviseTableView/EnhancedTableHead/EnhancedTableHead.js","features/advise/features/components/Popup/Popup.js","features/advise/features/components/NetworkGraphView/NetworkGraphView.js","features/advise/features/components/SelectedPackage/SelectedPackage.js","features/advise/routes/AdviseDetails.js","features/advise/components/AdviseTableView/AdviseTableView.js","features/advise/components/LockfileView/LockfileView.js","features/advise/routes/AdviseSummary.js","features/advise/api/getPackageDependencies.js","features/advise/api/getAdviseDocument.js","features/advise/api/getAdviseLogs.js","utils/Node.js","utils/Graph.js","features/advise/hooks/useGraph.js","features/advise/hooks/useMetrics.js","features/advise/routes/AdviseNotFound.js","components/Layout/NavigationLayout.js","features/advise/routes/index.js","features/advise/hooks/useMergeGraphs.js","features/package/components/PackageHeader/PackageHeader.js","features/package/routes/PackageOverview.js","features/package/components/PackageDependencies/PackageDependencies.js","features/package/components/PackageLicenses/PackageLicenses.js","features/package/routes/PackageNotFound.js","features/package/routes/index.js","routes/RouterConfig.js","styles/Theme.js","stores/Global.js","providers/app.js","App.js","index.js"],"names":["queryClient","QueryClient","defaultOptions","queries","useErrorBoundary","refetchOnWindowFocus","retry","TabPanel","children","value","index","props","role","hidden","id","className","SearchBar","onChange","onEnter","label","helpertext","boxprops","error","lefticon","righticon","Box","Typography","variant","sx","color","Paper","component","p","display","alignItems","borderColor","undefined","paddingLeft","paddingRight","InputBase","ml","flex","placeholder","e","target","onKeyPress","ev","key","preventDefault","THOTH_URL","options","manipulation","enabled","editNode","nodeData","callback","fixed","x","interaction","hover","hoverConnectedEdges","selectConnectedEdges","selectable","edges","chosen","smooth","arrowStrikethrough","arrows","from","type","nodes","background","border","shape","size","borderWidth","labelHighlightBold","font","strokeWidth","physics","hierarchicalRepulsion","damping","springLength","solver","minVelocity","getPackageMetadata","name","version","a","axios","get","params","headers","accept","catch","response","status","isAxiosError","getPackageMetadataPyPi","PYPI_URL","usePackagesMetadata","packages","config","useQueries","map","queryKey","queryFn","PackageSearch","navigate","useNavigate","useState","searchQuery","setSearchQuery","searchError","setSearchError","handleAnalyze","then","data","info","Grid","container","justifyContent","alignSelf","item","xs","minHeight","spacing","md","handleChange","mr","Button","onClick","minWidth","postAdvise","pipfile","pipfileLock","runtime_environment","application_stack","requirements","requirements_format","requirements_lock","post","recommendation_type","limit","filter","createFilterOptions","ComboBox","suggestions","help","required","setValue","useMemo","suggestion","title","Autocomplete","event","newValue","inputValue","filterOptions","filtered","isExisting","some","option","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","freeSolo","renderInput","fullWidth","helperText","reducer","state","action","loading","payload","param","Error","initState","lookupType","operating_system_name","operating_system_version","platform","python_version","cuda_version","cudnn_version","mkl_version","openblas_version","openmpi_version","base_image","AdviseCreation","useReducer","dispatch","isValid","valid","operating_system","Object","keys","forEach","analysis_id","includes","Collapse","in","mt","backgroundColor","padding","marginBottom","multiline","rows","sm","TextField","LoadingButton","Home","mode","setMode","theme","useTheme","matches","useMediaQuery","breakpoints","up","style","maxWidth","marginLeft","marginRight","marginTop","alt","src","logo","height","width","align","mb","direction","stat","i","ToggleButtonGroup","exclusive","newMode","ToggleButton","Divider","NotFound","Footer","pb","pt","textAlign","useStyles","makeStyles","root","MainLayout","classes","AdviseLayout","header","location","useLocation","Tabs","pathname","split","at","indicatorColor","textColor","Tab","RouterLink","to","bullet","margin","transform","fontSize","pos","InfoCard","cardMeta","cardBody","cardAction","Card","CardHeader","subheader","subTitle","CardContent","IconText","text","icon","link","href","formatLockfile","lockfile","entries","default","replace","timeSince","date","seconds","Math","floor","Date","interval","num","discoverPackageChanges","justifications","justifiedPackages","Map","justification","package_name","has","set","node","package","change","depth","reasons","start","visited","visitList","reasonNodes","pop","parents","adj","length","reason","oldVersion","whyRemoved","thoth","CustomAlert","Alert","severity","toLowerCase","message","titleRow","linksRow","alert","AdviseHeader","finished_at","started_at","datetime","adviseDocument","logs","React","expandAlerts","setExpandAlerts","showLogs","setShowLogs","selectedLine","setSelectedLine","result","report","ERROR","toUpperCase","statusText","statusColor","alerts","stack_info","metadata","document_id","parameters","Chip","error_msg","timeout","unmountOnExit","slice","line","noWrap","CustomLinearProgress","withStyles","borderRadius","colorPrimary","palette","grey","bar","LinearProgress","gridTemplateColumns","gridGap","whiteSpace","overflow","textOverflow","ProgressBar","total","AdviseMetric","metric","added","removed","unchanged","justTotal","values","reduce","b","gutterBottom","build","Skeleton","CustomCardAction","DependenciesMetric","all","roots","totalDependencies","direct","indirect","List","TransitionGroup","t","ListItem","ListItemText","primary","LicenseGroup","totalLicenses","open","setOpen","isOsiApproved","my","sort","k","v","LicenseMetric","more","setMore","licenses","sum","val","descendingComparator","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","headCells","numeric","EnhancedTableHead","onRequestSort","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","active","property","visuallyHidden","Popup","summary","license","latestVersion","flexFlow","canvas","NetworkGraph","mergedGraph","visJsRef","useRef","selected","useContext","SelectedPackageContext","useEffect","selectedNode","findAllNodesOnAllPaths","convertedNodes","DataSet","popup","document","createElement","ReactDOM","render","add","visData","visEdges","network","current","Network","networkCanvas","getElementById","getElementsByTagName","on","changeCursor","isCluster","newCursorStyle","cursor","ref","SelectedPackage","setSelected","selectedPackage","dependents","justs","just","Link","underline","Fragment","advisory","NetworkGraphView","createContext","AdviseDetails","search","setSearch","Provider","s","AdviseTableView","filteredGraph","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","setRows","console","log","newRows","warnings","dependencies","adjacents","emptyRows","max","TableContainer","Table","TableBody","row","labelId","iconColor","tabIndex","scope","paddingBottom","paddingTop","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","AdviseSummary","metrics","setPipfile","handlePipfile","newPipfile","advise","getPackageDependencies","getAdviseDocument","getAdviseLogs","Node","this","Set","Array","Graph","vertex","source","destination","sourceNode","destinationNode","addAdjacent","isAdjacent","first","shift","getAdjacents","path","newPath","nextPath","findPath","parent","paths","findAllPaths","useGraph","knownRoots","allMetadata","allDependencies","allMetadataStatus","success","query","allDependenciesStatus","isLoading","graph","setGraph","tempGraph","reformattedDeps","isSuccess","addVertex","notRoot","dep","adjacentNode","addEdge","requires_dist","app","adjs","min","useDependencyMetric","setMetric","base","bfs","graphSearch","useLicenseMetric","packageLicenses","classifier","classifiers","parsed","generalLicense","specificLicense","specific","useAdviseMetric","os_release","python","implementation_name","major","minor","micro","analyzer","analyzer_version","products","AdviseNotFound","NavigationLayout","AdviseRoutes","useParams","useQuery","useAdviseDocument","refetchInterval","useAdviseLogs","initGraphData","project","requirements_locked","adviseGraphData","initGraph","adviseGraph","dependency_graph","oldGraph","newGraph","visGraphEdges","combinedNode","main","useMergeGraphs","adviseMetric","oldDependencyMetric","newDependencyMetric","oldLicenseMetric","newLicenseMetric","useMetrics","CircularProgress","element","PackageHeader","all_versions","latest_version","flexGrow","PackageOverview","PackageNotFound","package_version","PackageRoutes","RouterConfig","basename","exact","themeLight","createTheme","light","dark","secondary","priamry","typography","fontFamily","h4","fontWeight","lineHeight","h5","h6","body1","body2","subtitle1","subtitle2","Theme","ThemeProvider","CssBaseline","StateContext","DispatchContext","Global","ErrorFallback","window","assign","origin","AppProvider","FallbackComponent","client","App","StrictMode"],"mappings":"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","file":"static/js/main.3f11e975.chunk.js","sourcesContent":["import { QueryClient } from 'react-query';\n\nconst queryConfig = {\n    queries: {\n        useErrorBoundary: true,\n        refetchOnWindowFocus: false,\n        retry: false,\n    },\n};\n\nexport const queryClient = new QueryClient({ defaultOptions: queryConfig });","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A tab panel used to encapsulate different tab content.\n */\nconst TabPanel = ({ children, value, index, ...props }) => {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      className={`${props.className}`}\n      {...props}\n    >\n      {value === index && children}\n    </div>\n  );\n};\n\nTabPanel.propTypes = {\n  /** The body of the tab. */\n  children: PropTypes.node,\n  /** The unique identifier of the tab. */\n  index: PropTypes.any.isRequired,\n  /** The state variable passed in from the parent which is compared to the index */\n  value: PropTypes.any.isRequired\n};\n\nexport default TabPanel;\n","export default __webpack_public_path__ + \"static/media/thoth-logo.1a28a729.png\";","// material ui\nimport {Typography, Box, Paper, InputBase} from \"@material-ui/core\";\n\n// react\nimport PropTypes from \"prop-types\";\n\n/**\n *\n */\nconst SearchBar = props => {\n    const {\n        onChange,\n        onEnter,\n        label,\n        helpertext,\n        boxprops,\n        error = false,\n        lefticon,\n        righticon\n    } = props;\n\n    return (\n        <Box>\n            <Typography\n                variant={\"body1\"}\n                sx={{ color: error ? \"error.main\" : \"text.secondary\" }}\n            >\n                {label}\n            </Typography>\n            <Paper\n                component=\"form\"\n                variant=\"outlined\"\n                sx={{\n                    p: \"8px 4px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    borderColor: error ? \"red\" : undefined,\n                    paddingLeft: 2,\n                    paddingRight: 2\n                }}\n                {...boxprops}\n            >\n                {lefticon}\n                <InputBase\n                    sx={{ ml: 1, flex: 1 }}\n                    placeholder={helpertext}\n                    error={error}\n                    onChange={e => onChange(e.target.value)}\n                    onKeyPress={(ev) => {\n                        if (ev.key === 'Enter') {\n                            onEnter()\n                            ev.preventDefault();\n                        }\n                    }}\n                    {...props}\n                />\n                {righticon}\n            </Paper>\n        </Box>\n    );\n};\n\n\nSearchBar.propTypes = {\n    /** The error text or default label text */\n    label: PropTypes.string,\n    /** callback function when textbox content changes */\n    onChange: PropTypes.func.isRequired,\n    /** callback function when textbox ENTER is pressed */\n    onEnter: PropTypes.func,\n    /** helper text for the search bar */\n    helpertext: PropTypes.string,\n    /** if there is an error or not */\n    error: PropTypes.bool,\n    /** icon displayed on the left of the text box */\n    lefticon: PropTypes.element,\n    /** icon displayed on the right of the text box */\n    righticon: PropTypes.element\n};\n\nexport default SearchBar;\n","export const PYPI_URL = \"https://pypi.org/pypi\";\nexport const THOTH_URL = \"https://khemenu.thoth-station.ninja/api/v1\";\nexport const LICENSES_URL = \"https://raw.githubusercontent.com/spdx/license-list-data/master/json/licenses.json\";\n\n/**\n * used for vis-js graph render engine\n */\nexport const options = {\n  manipulation: {\n    enabled: false,\n    editNode: function(nodeData, callback) {\n      nodeData.fixed = !nodeData.fixed.x;\n      callback(nodeData);\n    }\n  },\n  interaction: {\n    hover: true,\n    hoverConnectedEdges: false,\n    selectConnectedEdges: false,\n    selectable: true\n  },\n  edges: {\n    chosen: false,\n    smooth: false,\n    color: {\n      color: \"#5c6470\"\n    },\n    arrowStrikethrough: false,\n    arrows: {\n      from: {\n        enabled: true,\n        type: \"triangle\"\n      }\n    }\n  },\n\n  nodes: {\n    chosen: false,\n    color: {\n      background: \"#5c6470\",\n      border: \"#fff\",\n      hover: {\n        background: \"#f39200\",\n        border: \"#fff\"\n      }\n    },\n    shape: \"dot\",\n    size: 10,\n    borderWidth: 2,\n    labelHighlightBold: false,\n    font: {\n      color: \"#393e46\",\n      strokeWidth: 2,\n      size: 15\n    }\n  },\n  physics: {\n    hierarchicalRepulsion: {\n      damping: 0.1,\n      springLength: 200\n    },\n    solver: \"hierarchicalRepulsion\",\n    minVelocity: 0.15\n  }\n};\n","import axios from \"axios\";\nimport {THOTH_URL, PYPI_URL} from \"config\"\nimport {useQueries, useQuery} from 'react-query';\n\n\nexport const getPackageMetadata = async (\n    name,\n    version,\n    index = \"https://pypi.org/simple\"\n) => {\n    return axios\n        .get(THOTH_URL + \"/python/package/metadata\", {\n            params: {\n                name: name,\n                version: version,\n                index: index\n            },\n            headers: {\n                accept: \"application/json\"\n            }\n        })\n        .catch(e => {\n            if (e?.response?.status === 404 || e?.isAxiosError) {\n                return  getPackageMetadataPyPi(name, version)\n            } else {\n                throw e;\n            }\n        });\n};\n\nexport const getPackageMetadataPyPi = (name, version) => {\n    return axios\n        .get(PYPI_URL + \"/\" + name + (version ? \"/\" + version : \"\") + \"/json\").catch(() => { return undefined })\n}\n\nexport const usePackageMetadata = (name, version, config) => {\n    return useQuery({\n        ...config,\n        queryKey: ['packageMetadata', name, version],\n        queryFn: () => getPackageMetadata(name, version),\n    });\n};\n\nexport const usePackagesMetadata = (packages, config) => {\n    return useQueries(packages.map(p => {\n        return {\n            ...config,\n            queryKey: ['packageMetadata', p.name, p.version],\n            queryFn: () => getPackageMetadata(p.name, p.version),\n        }\n    }))\n};","import {Button, Grid, Typography} from \"@material-ui/core\";\nimport SearchBar from \"../../../components/Elements/SearchBar\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport React, {useState} from \"react\";\nimport {getPackageMetadataPyPi} from \"../../misc/api\";\nimport {useNavigate} from \"react-router-dom\";\n\nexport const PackageSearch = () => {\n    const navigate = useNavigate();\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [searchError, setSearchError] = useState(\"\");\n\n\n    const handleAnalyze = async () => {\n        // if no query\n        if (searchQuery === \"\") {\n            return;\n        }\n\n        getPackageMetadataPyPi(searchQuery)\n            .then(response => {\n                navigate(\"/package/\" + response.data.info.name);\n            })\n            .catch(() => {\n                setSearchError(\"Package does not exist\");\n            });\n    }\n\n    const handleChange = (e) => {\n        setSearchQuery(e.target.value);\n        if (searchError !== \"\") {\n            setSearchError(\"\");\n        }\n    };\n\n    return(\n\n            <Grid container justifyContent=\"center\">\n                <Grid alignSelf=\"flex-start\" item xs={12}>\n                    <Typography\n                        color=\"error\"\n                        variant=\"body1\"\n                        sx={{ minHeight: 30 }}\n                    >\n                        {searchError ?? \"\"}\n                    </Typography>\n                </Grid>\n                <Grid container spacing={2} item xs={12}>\n                    <Grid item xs={12} md={10}>\n                        <SearchBar\n                            error={searchError !== \"\"}\n                            onChange={e => handleChange(e)}\n                            helpertext={\"Search for a Python package\"}\n                            type=\"search\"\n                            boxprops={{ mr: 2 }}\n                            lefticon={<SearchRoundedIcon />}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={2}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => handleAnalyze()}\n                            sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                        >\n                            <b>Analyze</b>\n                        </Button>\n                    </Grid>\n                </Grid>\n\n            </Grid>\n    )\n}","import axios from \"axios\";\nimport {THOTH_URL} from \"config\"\n\n\nexport const postAdvise = (pipfile, pipfileLock, runtime_environment) => {\n    const data = {\n        application_stack: {\n            requirements: pipfile,\n            requirements_format: \"pipenv\",\n            requirements_lock: pipfileLock\n        },\n        runtime_environment: runtime_environment\n    };\n\n    return axios.post(THOTH_URL + \"/advise/python\", data, {\n        params: {\n            recommendation_type: \"stable\",\n            limit: 5000\n        },\n        headers: {\n            \"accept\": \"application/json\",\n            \"Content-Type\": \"application/json\"\n        }\n    });\n};","import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, {createFilterOptions} from '@mui/material/Autocomplete';\nimport {useMemo} from \"react\";\n\nconst filter = createFilterOptions();\n\nexport default function ComboBox({suggestions, label, help, required, error, value, setValue}) {\n\n    suggestions = useMemo(() => {\n        return suggestions.map(suggestion => {\n            return {\n                title: suggestion\n            }\n        })\n    }, [suggestions])\n\n    return (\n        <Autocomplete\n            value={value}\n            onChange={(event, newValue) => {\n                if (typeof newValue === 'string') {\n                    setValue(newValue);\n                } else if (newValue && newValue.inputValue) {\n                    // Create a new value from the user input\n                    setValue({title: newValue.inputValue});\n                } else {\n                    setValue(newValue);\n                }\n            }}\n            filterOptions={(options, params) => {\n                const filtered = filter(options, params);\n\n                const { inputValue } = params;\n                // Suggest the creation of a new value\n                const isExisting = options.some((option) => inputValue === option.title);\n                if (inputValue !== '' && !isExisting) {\n                    filtered.push({\n                        inputValue,\n                        title: `Add \"${inputValue}\"`,\n                    });\n                }\n\n                return filtered;\n            }}\n            selectOnFocus\n            clearOnBlur\n            handleHomeEndKeys\n            id=\"free-solo-with-text-demo\"\n            options={suggestions ?? []}\n            getOptionLabel={(option) => {\n                // Value selected with enter, right from the input\n                if (typeof option === 'string') {\n                    return option;\n                }\n                // Add \"xxx\" option created dynamically\n                if (option.inputValue) {\n                    return option.inputValue;\n                }\n                // Regular option\n                return option.title;\n            }}\n            renderOption={(props, option) => <li {...props}>{option.title}</li>}\n            freeSolo\n            renderInput={(params) => (\n                <TextField fullWidth {...params} label={label} required={required} error={error !== undefined} helperText={help}/>\n            )}\n        />\n    );\n}","import {Button, Collapse, Grid, Paper, TextField, Typography} from \"@material-ui/core\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport React, {useReducer} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport LoadingButton from \"@material-ui/lab/LoadingButton\";\nimport {postAdvise} from \"../api\";\nimport ComboBox from \"./ComboBox/ComboBox\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case \"loading\":\n            return {...state, loading: action.payload};\n        case \"error\":\n            return {...state, error: {...state.error, [action.param]: action.payload}};\n        case \"clear-error\":\n            state.error = {};\n            return state;\n        case \"input\":\n            return {...state, [action.param]: action.payload, error: {...state.error, [action.param]: undefined}};\n        default:\n            throw new Error(\"Advise state dispatch error\");\n    }\n}\n\nexport const initState = {\n    error: {},\n    loading: false,\n    lookupType: \"id\",\n    operating_system_name: \"ubi\",\n    operating_system_version: \"8\",\n    platform: \"\",\n    python_version: \"3.8\",\n    cuda_version: \"\",\n    cudnn_version: \"\",\n    mkl_version: \"\",\n    name: \"\",\n    openblas_version: \"\",\n    openmpi_version: \"\",\n    base_image: \"\"\n};\n\n\nexport const AdviseCreation = () => {\n    const navigate = useNavigate();\n    const [state, dispatch] = useReducer(reducer, initState)\n\n\n    const isValid = () =>{\n        if(state.lookupType === \"id\") {\n            if(!state.id || state.id === \"\") {\n                dispatch({type: \"error\", param: \"id\", payload: \"Field cant be empty\"})\n                return false\n            }\n        }\n        else {\n            let valid = true;\n            if(!state.pipfile) {\n                valid = false\n                dispatch({type: \"error\", param: \"pipfile\", payload: \"Field cant be empty\"})\n            }\n            if(!state.pipfileLock) {\n                valid = false\n                dispatch({type: \"error\", param: \"pipfileLock\", payload: \"Field cant be empty\"})\n            }\n            if(!state.name) {\n                valid = false\n                dispatch({type: \"error\", param: \"name\", payload: \"Field cant be empty\"})\n            }\n\n            return valid\n        }\n\n        return true\n    }\n\n    const handleAnalyze = async () => {\n        if(state.loading || !isValid()) { return; }\n\n        if(state.lookupType === \"id\") {\n            navigate( \"/advise/\" + state.id);\n        }\n        else {\n            dispatch({type: \"loading\", payload: true});\n            const runtime_environment = {\n                operating_system: {\n                    name: state.operating_system_name,\n                    version: state.operating_system_version\n                },\n                platform: state.platform,\n                python_version: state.python_version,\n                base_image: state.base_image,\n                cuda_version: state.cuda_version,\n                cudnn_version: state.cudnn_version,\n                mkl_version: state.mkl_version,\n                name: state.name,\n                openblas_version: state.openblas_version,\n                openmpi_version: state.openmpi_version,\n            }\n\n            Object.keys(runtime_environment).forEach(key => {\n                if(runtime_environment[key] === \"\") {\n                    delete runtime_environment[key];\n                }\n            })\n            if(runtime_environment[\"operating_system\"][\"name\"] === \"\" || runtime_environment[\"operating_system\"][\"version\"] === \"\") {\n                delete runtime_environment[\"operating_system\"]\n            }\n\n            postAdvise(state.pipfile, state.pipfileLock, runtime_environment)\n            .then(response => {\n                dispatch({type: \"loading\", payload: false});\n                navigate( \"/advise/\" + response.data.analysis_id);\n            })\n            .catch(error => {\n                dispatch({type: \"loading\", payload: false});\n                if (error?.response?.status === 400) {\n                    if (error?.response?.data?.error?.includes(\"Pipfile.lock\")) {\n                        dispatch({type: \"error\", param: \"pipfileLock\", payload: error?.response?.data?.error})\n                    } else if (error?.response?.data?.error?.includes(\"Pipfile\")) {\n                        dispatch({type: \"error\", param: \"pipfile\", payload: error?.response?.data?.error})\n                    }\n                }\n            });\n        }\n    }\n\n\n    return(\n        <>\n            <Collapse in={state.lookupType === \"id\"}>\n                <>\n                    <Grid container justifyContent=\"center\">\n                        <Grid item xs={12}>\n                            <Typography\n                                color=\"error\"\n                                variant=\"body1\"\n                                sx={{ minHeight: 30 }}\n                            >\n                                {state.error?.id}\n                            </Typography>\n                        </Grid>\n                        <Grid container item xs={12} spacing={2}>\n                            <Grid item xs={12} md={10}>\n                                <SearchBar\n                                    error={state.error?.id}\n                                    onChange={e => dispatch({type: \"input\", param: \"id\", payload: e.target.value})}\n                                    helpertext={\"Analysis ID\"}\n                                    type=\"search\"\n                                    boxprops={{ mr: 2 }}\n                                    lefticon={<SearchRoundedIcon />}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={() => handleAnalyze()}\n                                    sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                                >\n                                    <b>Analyze</b>\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Button onClick={() => dispatch({type: \"input\", param: \"lookupType\", payload: \"manual\"})}>New Advise</Button>\n                </>\n            </Collapse>\n\n            <Collapse in={state.lookupType === \"manual\"}>\n                <>\n                    <Typography variant={\"h6\"} mt={3}>Advise Parameters</Typography>\n                    <Paper sx={{backgroundColor: \"white\", padding: 3, marginBottom: 5}} variant=\"outlined\">\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} md={6}>\n                                <SearchBar\n                                    label={\n                                        state.error?.pipfile ? state.error?.pipfile : \"Pipfile contents\"\n                                    }\n                                    onChange={e => dispatch({type: \"input\", param: \"pipfile\", payload: e.target.value})}\n                                    error={state.error?.pipfile !== undefined}\n                                    multiline\n                                    rows={8}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <SearchBar\n                                    label={\n                                        state.error?.pipfileLock\n                                            ? state.error?.pipfileLock\n                                            : \"Pipfile.lock contents\"\n                                    }\n                                    onChange={e => dispatch({type: \"input\", param: \"pipfileLock\", payload: e.target.value})}\n                                    error={state.error?.pipfileLock !== undefined}\n                                    multiline\n                                    rows={8}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid container mt={4} spacing={2}>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <TextField onChange={e => dispatch({type: \"input\", param: \"base_image\", payload: e.target.value})} value={state.base_image} sx={{minWidth: \"100%\"}} label=\"Base Image\" required={false} helperText=\"A base container image used to run the application.\" error={state.error?.base_image} />\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox setValue={e => dispatch({type: \"input\", param: \"cuda_version\", payload: e?.title ?? \"\"})} value={state.cuda_version} suggestions={[\"9.0\"]} label=\"CUDA Version\" required={false} help=\"Nvidia CUDA version which the application uses.\" error={state.error?.cuda_version}/>\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox setValue={e => dispatch({type: \"input\", param: \"cudnn_version\", payload: e?.title ?? \"\"})} value={state.cudnn_version} suggestions={[\"8\"]} label=\"cuDNN Version\" required={false} help=\"NVIDIA cuDNN version used, if any.\" error={state.error?.cudnn_version}/>\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox setValue={e => dispatch({type: \"input\", param: \"mkl_version\", payload: e?.title ?? \"\"})} value={state.mkl_version} suggestions={[\"2021.1.1\"]} label=\"MKL Version\" required={false} help=\"Intel® Math Kernel Library version used, if any.\" error={state.error?.mkl_version}/>\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox setValue={e => dispatch({type: \"input\", param: \"name\", payload: e.title ?? \"\"})} value={state.name} suggestions={[\"ubi:8-prod\"]} label=\"Name\" required={true} help=\"User defined name of the runtime environment.\" error={state.error?.name}/>\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox setValue={e => dispatch({type: \"input\", param: \"openblas_version\", payload: e?.title ?? \"\"})} value={state.openblas_version} suggestions={[\"0.3.13\"]} label=\"OpenBLAS Version\" required={false} help=\"OpenBLAS version used, if any.\" error={state.error?.openblas_version}/>\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox setValue={e => dispatch({type: \"input\", param: \"openmpi_version\", payload: e?.title ?? \"\"})} value={state.openmpi_version} suggestions={[\"4.1\"]} label=\"Open MPI Version\" required={false} help=\"Open MPI version used, if any.\" error={state.error?.openmpi_version}/>\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <TextField onChange={e => dispatch({type: \"input\", param: \"operating_system_name\", payload: e.target.value})} value={state.operating_system_name} sx={{minWidth: \"100%\"}} label=\"Operating System Name\" required={false} helperText=\"Operating system name used.\" error={state.error?.operating_system_name}/>\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <TextField onChange={e => dispatch({type: \"input\", param: \"operating_system_version\", payload: e.target.value})} value={state.operating_system_version} sx={{minWidth: \"100%\"}} label=\"Operating System Version\" required={false} helperText=\"Operating system version used.\" error={state.error?.operating_system_version}/>\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox setValue={e => dispatch({type: \"input\", param: \"platform\", payload: e?.title ?? \"\"})} value={state.platform} suggestions={[\"linux-x86_64\"]} label=\"Platform\" required={false} help=\"Platform used - corresponds to sysconfig.get_platform() call.\" error={state.error?.platform}/>\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={4}>\n                                <ComboBox setValue={e => dispatch({type: \"input\", param: \"python_version\", payload: e?.title ?? \"\"})} value={state.python_version} suggestions={[\"2.7\", \"3.6\", \"3.7\", \"3.8\", \"3.9\"]} label=\"Python Version\" required={false} help=\"Python version on which the application runs on.\" error={state.error?.python_version}/>\n                            </Grid>\n                            <Grid container item xs={12} spacing={2}>\n                                <Grid item xs={6} md={6}>\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        onClick={() => dispatch({type: \"input\", param: \"lookupType\", payload: \"id\"})}\n\n                                        sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                                    >\n                                        <b>Cancel</b>\n                                    </Button>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <LoadingButton\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => handleAnalyze()}\n                                        loading={state.loading}\n                                        sx={{ minHeight: \"100%\", minWidth: \"100%\" }}\n                                    >\n                                        <b>Analyze</b>\n                                    </LoadingButton>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </>\n            </Collapse>\n        </>\n    )\n}","// react\nimport React, { useState } from \"react\";\n\n// material-ui\nimport {Typography, Grid, Divider, ToggleButtonGroup, ToggleButton, Box} from \"@material-ui/core\";\n\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\n// local\nimport TabPanel from \"components/Elements/TabPanel\";\nimport logo from \"assets/thoth-logo.png\";\n\nimport {PackageSearch, AdviseCreation} from \"../components\";\n\nexport const Home = () => {\n    // utility states\n    const [mode, setMode] = useState(\"multiple\");\n\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\n\n    // change mode view\n    const handleMode = (event, newMode) => {\n        if (newMode) {\n            setMode(newMode);\n        }\n    };\n\n\n    return (\n        <div style={{maxWidth: \"1000px\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n        <Grid container justifyContent=\"center\">\n            <Grid item>\n                <Box sx={{ marginTop: 10 }}>\n                    <img alt=\"Thoth Logo\" src={logo} height={!matches ? \"auto\" : 300} width={\"100%\"} />\n                </Box>\n            </Grid>\n            <Grid container item justifyContent=\"center\" mt={5} spacing={0}>\n                <Grid container item sm={12} md={6} align=\"center\" mr={5}>\n                    <Grid item xs={12} align=\"left\" mb={3}>\n                        <Typography variant=\"h4\" >\n                            <b>Thoth Search</b>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} align=\"left\">\n                        <Typography variant=\"subtitle1\">\n                            Thoth Search is a tool that runs analysis on a Python application.\n                            It utilizes package metadata and Thoth Adviser to analyse and\n                            recommend a software stack. You can run analysis on an entire\n                            Python application using a properly formatted Pipfile and\n                            Pipfile.lock. Alternatively, you can analyse a single Python\n                            package to see what Thoth knows about the package.\n                        </Typography>\n                    </Grid>\n                </Grid>\n\n                <Grid\n                    item\n                    container\n                    sm={12} md={5}\n                    direction=\"column\"\n                    justifyContent=\"center\"\n                    spacing={1}\n                >\n                    {[\n                        [\"One\", \"100k\"],\n                        [\"Two\", \"20%\"],\n                        [\"Three\", \"62\"],\n                        [\"Four\", \"N/A\"]\n                    ].map((stat, i) => {\n                        return (\n                            <Grid item container alignItems=\"center\" key={i}>\n                                <Grid item xs={6}>\n                                    <Typography variant=\"h6\">\n                                        <b>Thoth Statistic {stat[0]}</b>\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <Typography variant=\"h5\" align=\"right\">\n                                        {stat[1]}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n                <Grid item xs={12} align=\"center\" mt={3} mb={4}>\n                    <ToggleButtonGroup\n                        value={mode}\n                        exclusive\n                        onChange={handleMode}\n                        size={!matches ? \"small\" : \"large\"}\n                    >\n                        <ToggleButton value=\"single\">\n                            <b>single package analysis</b>\n                        </ToggleButton>\n                        <ToggleButton value=\"multiple\">\n                            <b>Python application analysis</b>\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Divider sx={{marginBottom: 3}}/>\n                    <TabPanel value={mode} index=\"single\">\n                        <PackageSearch />\n                    </TabPanel>\n                    <TabPanel value={mode} index={\"multiple\"}>\n                       <AdviseCreation />\n                    </TabPanel>\n                </Grid>\n            </Grid>\n        </Grid>\n        </div>\n    );\n};","export const NotFound = () => {\n    return <div>404</div>;\n};","import {Box} from \"@material-ui/core\";\n\nexport const Footer = () => {\n    return(\n        <Box pb={3} pt={6} sx={{backgroundColor: \"#444f60\", textAlign: \"center\", color: \"white\"}}>\n            This is a footer\n        </Box>\n    )\n}","import * as React from 'react';\nimport {makeStyles} from \"@material-ui/styles\";\nimport {Footer} from \"../Footer\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(15),\n        minHeight: \"100vh\",\n    },\n\n}));\n\n/**\n * Main layout adds margins and spacing to the whole app.\n */\nexport const MainLayout = ({ children }) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <div className={classes.root}>\n                {children}\n            </div>\n            <Footer />\n        </>\n\n    );\n};","import * as React from 'react';\nimport {Tab, Tabs} from \"@material-ui/core\";\nimport {Link as RouterLink, useLocation} from 'react-router-dom';\n\n/**\n * A layout used for the advise feature tabs. It formats the tabs as router links.\n */\nexport const AdviseLayout = ({ children, header }) => {\n    const location = useLocation();\n\n    return (\n        <>\n            <div>\n                {header}\n                <Tabs\n                    value={location.pathname.split(\"/\").at(-1)}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    <Tab\n                        label=\"Summary\"\n                        value={\"summary\"}\n                        component={RouterLink}\n                        to=\"summary\">\n                    </Tab>\n                    <Tab\n                        label=\"Advise Results\"\n                        value={\"details\"}\n                        component={RouterLink}\n                        to=\"details\">\n                    </Tab>\n                </Tabs>\n            </div>\n            <div>\n                {children}\n            </div>\n        </>\n    );\n};","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, CardContent, CardHeader, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    height: \"100%\"\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\n/** Card template for metric cards. */\nconst InfoCard = ({ cardMeta, cardBody, cardAction }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        action={cardAction}\n        title={<Typography variant=\"h5\">{cardMeta.title}</Typography>}\n        subheader={cardMeta.subTitle}\n      />\n      <CardContent>{cardBody}</CardContent>\n    </Card>\n  );\n};\n\nInfoCard.propTypes = {\n  /** card header info */\n  cardMeta: PropTypes.shape({\n    /** card title */\n    title: PropTypes.string.isRequired,\n    /** optional subtitle */\n    subTitle: PropTypes.string,\n  }),\n  /** optional card action component (usually some button) */\n  cardAction: PropTypes.element,\n  /** Card body content */\n  cardBody: PropTypes.element\n};\n\nexport default InfoCard;\n","// material-ui\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\n// react\nimport PropTypes from \"prop-types\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n}));\n\n/**\n * Text with an icon to the right of it.\n */\nconst IconText = ({ text, icon, link, ...props }) => {\n  const classes = useStyles();\n  return (\n    <div className={`${classes.root} ${props.className}`}>\n      {icon}\n      <Typography href={link ? link : null} variant=\"body2\" marginLeft>\n        {text}\n      </Typography>\n    </div>\n  );\n};\n\nexport default IconText;\n\nIconText.propTypes = {\n  /** The text shown */\n  text: PropTypes.string.isRequired,\n  /** The icon component to be displayed */\n  icon: PropTypes.element.isRequired,\n  /** Optional link if text is selected */\n  link: PropTypes.string\n};\n","export function formatLockfile(lockfile) {\n    return Object.entries(lockfile.default).map(([key, value]) => {\n        return ({\n            name: key,\n            version: value.version.replace(\"==\", \"\")\n        })\n    })\n}","export default function timeSince(date) {\n  var seconds = Math.floor((new Date() - date) / 1000);\n\n  var interval = seconds / 31536000;\n\n  if (interval > 1) {\n    const num = Math.floor(interval);\n    return num + \" year\" + (num !== 1 ? \"s\" : \"\");\n  }\n  interval = seconds / 2592000;\n  if (interval > 1) {\n    const num = Math.floor(interval);\n    return num + \" month\" + (num !== 1 ? \"s\" : \"\");\n  }\n  interval = seconds / 86400;\n  if (interval > 1) {\n    const num = Math.floor(interval);\n    return num + \" day\" + (num !== 1 ? \"s\" : \"\");\n  }\n  interval = seconds / 3600;\n  if (interval > 1) {\n    const num = Math.floor(interval);\n    return num + \" hour\" + (num !== 1 ? \"s\" : \"\");\n  }\n  interval = seconds / 60;\n  if (interval > 1) {\n    const num = Math.floor(interval);\n    return num + \" minute\" + (num !== 1 ? \"s\" : \"\");\n  }\n  const num = Math.floor(seconds);\n  return num + \" second\" + (num !== 1 ? \"s\" : \"\");\n}\n","import timeSince from \"utils/timeSince\";\n\n/**\n * Given either a date and time, calculated time since that date.\n * This is used to calculate how long ago an Advisor document was generated or has been generating.\n * It is specific to the document formatting\n *\n * @param {string} finished_at - for when the advise document is completed\n * @param {string} started_at - the time at which the document was started (is preceded by finished at)\n * @param {string} datetime - fallback to datetime\n * @returns {string} - English version of date\n */\nexport const calcTime = (finished_at, started_at, datetime) => {\n    // if status says finished\n    if (finished_at) {\n        return \"Advise finished \" + timeSince(new Date(finished_at)) + \" ago.\";\n    }\n    // if status is pending\n    else if (started_at) {\n        return \"Advise started \" + timeSince(new Date(started_at)) + \" ago.\";\n    }\n    // if status is nulled so use metadata end date\n    else if (datetime) {\n        return \"Advise finished \" + timeSince(new Date(datetime + \"Z\")) + \" ago.\";\n    } else {\n        return \"Time started/finished not available\";\n    }\n};\n","const whyRemoved = (start, packages) => {\n    const visited = new Map();\n    const visitList = [];\n\n    visitList.push(start);\n\n    const reasonNodes = [];\n\n    while (visitList.length !== 0) {\n        const node = visitList.pop();\n        if (node && !visited.has(node)) {\n            visited.set(node);\n\n            if (node.key === \"*App\") {\n                continue;\n            } else if (node.value.change === \"version\") {\n                reasonNodes.push(node);\n            } else {\n                node.parents.forEach(adj => {\n                    if (adj === \"*App\" && node.key !== start.key) {\n                        reasonNodes.push(node);\n                    }\n                    visitList.push(packages.get(adj));\n                });\n            }\n        }\n    }\n\n    return reasonNodes.map(node => {\n        const reason =\n            node.value.change === \"version\"\n                ? \" had its version changed to \" +\n                node.value.version +\n                \" from \" +\n                node.value.oldVersion +\n                \". Version \" +\n                node.value.oldVersion +\n                \" of \" +\n                node.key +\n                \" included package \" +\n                start.value.label +\n                \" as a dependency, where version \" +\n                node.value.version +\n                \" does not. \"\n                : \" did not have any dependents and was removed by the Thoth resolver.\";\n        return {\n            package: node.key,\n            reason: reason\n        };\n    });\n};\n\nexport const discoverPackageChanges = (nodes, justifications) => {\n    if (!nodes || !justifications) {\n        return;\n    }\n\n    const justifiedPackages = new Map();\n    justifications.forEach(justification => {\n        if (justification.package_name) {\n            if (justifiedPackages.has(justification.package_name)) {\n                justifiedPackages.set(justification.package_name, [\n                    ...justifiedPackages.get(justification.package_name),\n                    justification\n                ]);\n            } else {\n                justifiedPackages.set(justification.package_name, [justification]);\n            }\n        }\n    });\n\n    nodes.forEach(node => {\n        let justification = {\n            package: node.key\n        };\n\n        if (node.value.change === \"removed\") {\n            // set header\n            justification.header = `${node.value.label} was ${\n                node.value.depth === 0 ? \"directly\" : \"indirectly\"\n            } removed by Thoth resolver.`;\n\n            // set reasons for removal\n            justification.reasons = whyRemoved(node, nodes);\n\n            // if no reasons for removal\n            if (justification.reasons.length === 0) {\n                justification.header = `${node.value.label} was removed for an unknown reason. The package does not have dependents in the Pipfile.lock.`;\n            }\n        }\n        // if added\n        else if (node.value.change === \"added\") {\n            justification.header = `${node.value.label} was added to the Pipfile.lock by Thoth resolver.`;\n        }\n\n        // if added\n        else if (node.value.change === \"version\") {\n            justification.header = `${node.key} had its version changed from ${node.value.oldVersion} to ${node.value.version}.`;\n        }\n\n        // if unchanged\n        else {\n            justification.header =\n                \"Thoth resolver did not remove or change package \" +\n                node.value.label +\n                \".\";\n        }\n\n        // check if there is a justification for change\n        if (justifiedPackages.has(node.key)) {\n            const reasons = justifiedPackages.get(node.key);\n            justification = {\n                ...justification,\n                thoth: reasons\n            };\n        }\n\n        node.value.justifications = justification;\n    }, []);\n};\n","import { Button, Alert } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A custom alert card.\n */\nconst CustomAlert = ({ info, ...props }) => {\n  return (\n    <Alert\n      className={props?.className}\n      action={\n        <Button color=\"inherit\" size=\"small\" href={info?.link}>\n          DETAILS\n        </Button>\n      }\n      severity={info.type.toLowerCase()}\n    >\n      {info?.message}\n    </Alert>\n  );\n};\n\nCustomAlert.propTypes = {\n    /** The alert content. */\n    info: PropTypes.shape({\n        /** Link to navigate to if alert is actioned on. */\n        link: PropTypes.string.isRequired,\n        /** Text displayed in the alert. */\n        message: PropTypes.string.isRequired,\n        /** Severity (color) of alert: `[\"ERROR\", \"WARNING\", \"INFO\", \"SUCCESS\"]`. */\n        type: PropTypes.oneOf([\"ERROR\", \"WARNING\", \"INFO\", \"SUCCESS\"]).isRequired\n    }).isRequired,\n    /** The `material-ui` styling classname */\n    classname: PropTypes.string\n}\n\nexport default CustomAlert;\n","// React\nimport React, { useMemo } from \"react\";\n\n// material-ui\nimport {Typography, Chip, Button, Collapse} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport FeedRoundedIcon from '@mui/icons-material/FeedRounded';\n// local\nimport IconText from \"components/Elements/IconText\";\n\n// utils\nimport { calcTime } from \"../../utils\";\n\n// local\nimport CustomAlert from \"./CustomAlert\";\nimport PropTypes from \"prop-types\";\n\n// component styling\n\nconst useStyles = makeStyles(theme => ({\n  titleRow: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(1)\n  },\n  marginLeft: {\n    marginLeft: theme.spacing(2)\n  },\n  marginRight: {\n    marginRight: theme.spacing(2)\n  },\n  linksRow: {\n    display: \"flex\",\n    marginBottom: theme.spacing(3),\n    alignItems: \"center\"\n  },\n  alert: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  }\n}));\n\n/**\n * Displays basic Advise document information and\n * displays any errors, info, or warnings that came up\n * in the document generation.\n */\nexport const AdviseHeader = ({ adviseDocument, logs}) => {\n  const classes = useStyles();\n  const [expandAlerts, setExpandAlerts] = React.useState(false);\n  const [showLogs, setShowLogs] = React.useState(false);\n  const [selectedLine, setSelectedLine] = React.useState();\n\n  // get status of the report\n  const [statusText, statusColor] = useMemo(() => {\n    // if report is done\n    if (adviseDocument?.result?.report) {\n      if (adviseDocument.result.report.ERROR) {\n        return [\"ERROR\", \"error\"];\n      } else {\n        return [\"COMPLETE\", \"success\"];\n      }\n    }\n    else if(adviseDocument?.result?.error) {\n      return [\"ERROR\", \"error\"];\n    }\n    // if report is not done\n    else if (adviseDocument?.status?.state) {\n      return [adviseDocument.status.state.toUpperCase(), \"info\"];\n    } else {\n      return [\"UNKNOWN\", undefined];\n    }\n  }, [adviseDocument]);\n\n  // get alerts from report\n  const alerts = useMemo(() => {\n        if (adviseDocument?.result?.report) {\n          return adviseDocument?.result?.report?.stack_info\n              ? adviseDocument?.result?.report.stack_info.filter(alert => {\n                return alert.type === \"ERROR\";\n              })\n              : null\n        }\n      }, [adviseDocument]\n  );\n\n\n  return (\n    <div>\n      <Typography variant=\"h4\">\n        <b>{adviseDocument?.metadata?.document_id ?? adviseDocument?.parameters?.analysis_id}</b>\n      </Typography>\n      <div className={classes.linksRow}>\n        <Chip label={statusText} color={statusColor} />\n        <IconText\n          className={classes.marginLeft}\n          text={calcTime(\n            adviseDocument?.status?.finished_at,\n            adviseDocument?.status?.started_at,\n            adviseDocument?.metadata?.datetime\n          )}\n          icon={<AccessTimeIcon />}\n        />\n        <Button sx={{marginLeft: 2}} onClick={() => setShowLogs(!showLogs)}>\n          <IconText\n              text=\"Logs\"\n              icon={<FeedRoundedIcon />}\n          />\n        </Button>\n      </div>\n      <Typography variant={\"subtitle2\"}>{adviseDocument?.result?.report?.ERROR ?? adviseDocument?.error ?? adviseDocument?.result?.error_msg}</Typography>\n      {alerts?.length > 0 ? (\n        <div>\n          <CustomAlert info={alerts[0]} />\n          <Collapse in={expandAlerts} timeout=\"auto\" unmountOnExit>\n            {alerts?.slice(1).map((info, i) => {\n              return <CustomAlert key={i} info={info} className={classes.alert} />;\n            })}\n          </Collapse>\n\n          <Button\n            color=\"inherit\"\n            size=\"small\"\n            onClick={() => setExpandAlerts(!expandAlerts)}\n          >\n            {alerts?.length > 1 ? (expandAlerts ? \"LESS\" : \"MORE\") : null}\n          </Button>\n        </div>\n      ) : null}\n\n      <Collapse in={showLogs}>\n        {logs?.split(\"\\n\").map((line, i) => {\n          return(\n                <Typography key={i}\n                            noWrap={selectedLine !== i}\n                            onClick={() => setSelectedLine(selectedLine === i ? undefined : i)}\n                            variant=\"body2\"\n                            sx={{backgroundColor: selectedLine === i ? \"lightyellow\" : i % 2 === 0 ? \"lightgray\" : \"unset\"}}\n                >\n                  {line}\n                </Typography>\n          )\n        }) ?? \"Advisor log is not available.\"}\n\n      </Collapse>\n\n      {statusText === \"COMPLETE\" ? (\n        <Typography variant=\"body1\" sx={{ color: \"text.secondary\" }}>\n          Thoth has added and removed packages from the original Pipfile.lock,\n          resulting in a <i>new</i> Pipfile.lock. Switch between the new and old\n          Python environments to see the differences.\n        </Typography>\n      ) : null}\n    </div>\n  );\n};\n\nAdviseHeader.propTypes = {\n  /** the Advise document id*/\n  adviseDocument: PropTypes.object.isRequired\n}","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { withStyles, makeStyles } from \"@material-ui/styles\";\nimport { LinearProgress, Typography, Grid } from \"@material-ui/core\";\n\nconst CustomLinearProgress = withStyles(theme => ({\n  root: {\n    height: 10,\n    borderRadius: 5\n  },\n  colorPrimary: {\n    backgroundColor:\n      theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700]\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: \"#1a90ff\"\n  }\n}))(LinearProgress);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(6,1fr)\",\n    alignItems: \"center\",\n    gridGap: theme.spacing(1)\n  },\n  label: {\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  value: {\n    textAlign: \"end\"\n  }\n}));\n\n/**\n * A horizontal bar for showing a percent of a total.\n */\nconst ProgressBar = ({ value, total, label, action }) => {\n  const classes = useStyles();\n  return (\n    <Grid container spacing={1} alignItems=\"center\">\n      <Grid item xs={5}>\n        <Typography variant=\"body2\" className={classes.label}>\n          {label}\n        </Typography>\n      </Grid>\n      <Grid item xs={1.75}>\n        <Typography className={classes.value} variant=\"body2\">\n          {value}\n        </Typography>\n      </Grid>\n      <Grid item xs>\n        <CustomLinearProgress\n          variant=\"determinate\"\n          value={total > 0 ? (value / total) * 100 : 0}\n        />\n      </Grid>\n      <Grid item xs={1}>\n        <div>{action ?? null}</div>\n      </Grid>\n    </Grid>\n  );\n};\n\nProgressBar.propTypes = {\n  /** the amount (numerator) for the bar */\n  value: PropTypes.number.isRequired,\n  /** the total (denominator) for the bar */\n  total: PropTypes.number.isRequired,\n  /** optional label */\n  label: PropTypes.string\n};\n\nexport default ProgressBar;\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport {Typography, Divider, Skeleton, Box} from \"@material-ui/core\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\n\n/**\n * A metric card that aggregates changes between the initial dependency\n * graph and the Thoth made dependency graph.\n */\nexport const AdviseMetric = ({ metric }) => {\n  const total = metric?.added + metric?.removed + metric?.version + metric?.unchanged;\n  const justTotal = Object.values(metric?.justification ?? {}).reduce((a, b) => a + b, 0);\n\n  if(!metric) {\n      return (\n          <Box>\n              <Skeleton />\n              <Skeleton />\n              <Skeleton width={\"60%\"}/>\n          </Box>\n      )\n  }\n\n    return (\n    <>\n      <Typography variant=\"body2\" gutterBottom>\n        {metric?.build}\n      </Typography>\n      <Typography variant=\"h6\" gutterBottom mt={2}>\n        What Thoth Changed\n      </Typography>\n      <Divider mb={1} />\n      <ProgressBar\n        value={metric?.added ?? 0}\n        total={total}\n        label={\"Added Packages\"}\n        mb={1}\n      />\n      <ProgressBar\n        value={metric?.removed ?? 0}\n        total={total}\n        label={\"Removed Packages\"}\n        mb={1}\n      />\n      <ProgressBar\n        value={metric?.version ?? 0}\n        total={total}\n        label={\"Version Changes\"}\n      />\n      <Typography variant=\"h6\" mt={3} gutterBottom>\n          Justification Counts\n      </Typography>\n      <Divider mb={1} />\n      {Object.entries(metric?.justification ?? {}).map(([key, value]) => {\n        return (\n            <ProgressBar\n                key={key}\n                value={value}\n                total={justTotal}\n                label={key}\n                mb={1}\n            />\n        );\n      })}\n    </>\n  );\n};\n\nAdviseMetric.propTypes = {\n    /** The metric object info of aggregated data */\n    metric: PropTypes.shape({\n        /** The number of new dependencies */\n        added: PropTypes.number,\n        /** The number of removed dependencies */\n        removed: PropTypes.number,\n        /** The number of dependencies whose version was changed*/\n        version: PropTypes.number,\n        /** The number of dependencies that did not change*/\n        unchanged: PropTypes.number,\n        /** The number Thoth justification (warnings) that were produced */\n        justification: PropTypes.object,\n    })\n };","import { ToggleButtonGroup, ToggleButton } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A button group for toggling between old and new dependency graphs.\n * It takes two parameters, a callback function and a state variable.\n */\nexport const CustomCardAction = ({ value, onChange }) => {\n  return (\n    <ToggleButtonGroup value={value} exclusive size=\"small\" onChange={onChange}>\n      <ToggleButton value=\"oldGraph\">Old</ToggleButton>\n      <ToggleButton value=\"newGraph\">New</ToggleButton>\n    </ToggleButtonGroup>\n  );\n};\n\nCustomCardAction.propTypes = {\n    /** The state variable the buttons use to control the active value */\n    value: PropTypes.string.isRequired,\n    /** The callback function that runs when a button is changed */\n    onChange: PropTypes.func.isRequired\n}","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\n\n\n// material-ui\nimport { TransitionGroup } from \"react-transition-group\";\n\nimport {\n    Typography,\n    Divider,\n    List,\n    ListItem,\n    ListItemText,\n    Grid,\n    Collapse, Box, Skeleton\n} from \"@material-ui/core\";\n\n/**\n * A metric card that displays direct, indirect, and root packages of a dependency graph.\n */\nexport const DependenciesMetric = ({ all, roots }) => {\n  const totalDependencies =\n    (all?.direct ?? 0) +\n    (all?.indirect ?? 0) +\n    (all?.roots ?? 0);\n\n  if(!all || !roots) {\n      return (\n          <Box>\n              <Skeleton />\n              <Skeleton />\n              <Skeleton width={\"60%\"}/>\n          </Box>\n      )\n  }\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        All Packages\n      </Typography>\n      <Divider mb={1} />\n      <ProgressBar\n        value={all?.roots ?? 0}\n        total={totalDependencies}\n        label={\"Root\"}\n        mb={1}\n      />\n      <ProgressBar\n        value={all?.direct ?? 0}\n        total={totalDependencies}\n        label={\"Direct\"}\n        mb={1}\n      />\n      <ProgressBar\n        value={all?.indirect ?? 0}\n        total={totalDependencies}\n        label={\"Indirect\"}\n      />\n      <Typography variant=\"h6\" gutterBottom mt={2}>\n        Root Packages\n      </Typography>\n      <Divider mb={1} />\n      <List component=\"nav\">\n        <TransitionGroup>\n          {Object.entries(roots ?? {})?.map(([key, value], i) => {\n            const t =\n              (roots[key].direct ?? 0) +\n              (roots[key].indirect ?? 0);\n            return (\n              <Collapse key={key}>\n                <div>\n                  <ListItem>\n                    <Grid container alignItems=\"center\">\n                      <Grid item xs>\n                        <ListItemText primary={key} />\n                      </Grid>\n                      <Grid item xs>\n                        <Grid container direction=\"column\">\n                          <Grid item xs>\n                            <ProgressBar\n                              value={roots?.[key]?.direct ?? 0}\n                              total={t}\n                              label={\"Direct\"}\n                            />\n                          </Grid>\n                          <Grid item xs>\n                            <ProgressBar\n                              value={roots?.[key]?.indirect ?? 0}\n                              total={t}\n                              label={\"Indirect\"}\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </ListItem>\n                  <Divider variant={\"middle\"} mb={1} />\n                </div>\n              </Collapse>\n            );\n          })}\n        </TransitionGroup>\n      </List>\n    </>\n  );\n};\n\nDependenciesMetric.propTypes = {\n    /** summary object of all roots aggregated */\n    all: PropTypes.shape({\n        /** number of dependencies directly related to root packages */\n        direct: PropTypes.number,\n        /** number of dependencies directly or indirectly related to the direct packages*/\n        indirect: PropTypes.number,\n        /** number of dependencies that have no dependents*/\n        roots: PropTypes.number\n    }),\n    /** an object of key (package name) value pairs of specific roots with direct and indirect parameters for each value */\n    roots: PropTypes.objectOf(PropTypes.shape({\n        /** roots own direct packages */\n        direct: PropTypes.number,\n        /** roots own indirect packages */\n        indirect: PropTypes.number\n    }))\n};","import React from \"react\";\n\n// material-ui\nimport { Divider, Collapse, Chip, Grid, Box } from \"@material-ui/core\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\nimport HelpOutlineRoundedIcon from \"@material-ui/icons/HelpOutlineRounded\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A custom list item displaying the number of packages under a particular license.\n */\nconst LicenseGroup = ({ name, metadata, packages, totalLicenses }) => {\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <Grid container>\n      <Grid item xs={1}>\n        {metadata?.isOsiApproved === null ? (\n          <HelpOutlineRoundedIcon />\n        ) : metadata?.isOsiApproved ? (\n          <CheckRoundedIcon />\n        ) : null}\n      </Grid>\n      <Grid item xs>\n        <Box onClick={() => setOpen(!open)}>\n          <ProgressBar\n            key={name}\n            value={Object.keys(packages).length ?? 0}\n            total={totalLicenses}\n            label={name}\n            action={open ? <ExpandLess /> : <ExpandMore />}\n          />\n        </Box>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box my={1}>\n            {Object.entries(packages)\n              .sort((a, b) => {\n                return a[1] - b[1];\n              })\n              .map(([k, v]) => {\n                return (\n                  <Chip\n                    key={k}\n                    sx={{ margin: 0.5 }}\n                    color={\n                      v.depth === 0\n                        ? \"primary\"\n                        : v.depth === 1\n                        ? \"secondary\"\n                        : \"default\"\n                    }\n                    label={k}\n                  />\n                );\n              })}\n          </Box>\n          <Divider />\n        </Collapse>\n      </Grid>\n    </Grid>\n  );\n};\n\nLicenseGroup.propTypes ={\n    /** The license name */\n    name: PropTypes.string.isRequired,\n    /** License specific infomration */\n    metadata: PropTypes.shape({\n        /** If license is approved by OSI standards */\n        isOsiApproved: PropTypes.bool\n    }),\n    /** The packages that use this license as an object */\n    packages: PropTypes.objectOf(PropTypes.shape({\n        depth: PropTypes.number.isRequired\n    })).isRequired,\n    /** The total number of packages that have licenses. (used to add a total to the metric bar) */\n    totalLicenses: PropTypes.number.isRequired\n\n\n}\n\nexport default LicenseGroup;\n","// react\nimport React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport {\n    Typography,\n    Divider,\n    Collapse,\n    Button,\n    Box,\n    Grid, Skeleton\n} from \"@material-ui/core\";\nimport { TransitionGroup } from \"react-transition-group\";\n\n// local\nimport LicenseGroup from \"./LicenseGroup\";\n\n/**\n * A metric card that visualizes license data for all packages in the graph.\n */\nexport const LicenseMetric = ({ metric }) => {\n  const [more, setMore] = React.useState(false);\n\n  const licenses = useMemo(\n    () =>\n      Object.entries(metric ?? {}).sort((a, b) => {\n        return Object.keys(b[1]).length - Object.keys(a[1]).length;\n      }),\n    [metric]\n  );\n\n  const totalLicenses = useMemo(\n    () =>\n      Object.entries(metric ?? {}).reduce((sum, [key, val]) => {\n        return sum + Object.keys(val.packages).length;\n      }, 0),\n    [metric]\n  );\n\n    if(!metric) {\n        return (\n            <Box>\n                <Skeleton />\n                <Skeleton />\n                <Skeleton width={\"60%\"}/>\n            </Box>\n        )\n    }\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={1}>\n          <Typography variant=\"h6\" gutterBottom>\n            OSI\n          </Typography>\n        </Grid>\n        <Grid item xs>\n          <Typography variant=\"h6\" gutterBottom>\n            Dependency Licenses\n          </Typography>\n        </Grid>\n      </Grid>\n\n      <Divider />\n        <TransitionGroup>\n          {licenses?.slice(0, 10).map(([key, value]) => {\n            return (\n              <Collapse key={key}>\n                <LicenseGroup\n                  name={key}\n                  metadata={value.metadata}\n                  packages={value.packages}\n                  totalLicenses={totalLicenses}\n                />\n              </Collapse>\n            );\n          })}\n        </TransitionGroup>\n\n        <Collapse in={more} timeout=\"auto\" unmountOnExit>\n          <TransitionGroup>\n            {licenses.slice(10).map(([key, value]) => {\n              return (\n                <Collapse key={key}>\n                  <LicenseGroup\n                    name={key}\n                    metadata={value.metadata}\n                    packages={value.packages}\n                    totalLicenses={totalLicenses}\n                  />\n                </Collapse>\n              );\n            })}\n          </TransitionGroup>\n        </Collapse>\n        <Box textAlign=\"center\">\n          <Button onClick={() => setMore(!more)} color=\"primary\">\n            {more ? \"Less\" : \"More\"}\n          </Button>\n        </Box>\n    </div>\n  );\n};\n\nLicenseMetric.propTypes = {\n    /** Key value pairs of license names (keys) and license information (values).*/\n    metric: PropTypes.objectOf(PropTypes.shape({\n        metadata: PropTypes.object,\n        packages: PropTypes.object.isRequired\n    }))\n};\n","function descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n","import {\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Box,\n  TableCell\n} from \"@material-ui/core\";\n\nimport { visuallyHidden } from \"@material-ui/utils\";\n\nimport PropTypes from \"prop-types\";\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    label: \"Package\"\n  },\n  {\n    id: \"depth\",\n    numeric: true,\n    label: \"Depth\"\n  },\n  {\n    id: \"license\",\n    numeric: false,\n    label: \"License\"\n  },\n  {\n    id: \"dependencies\",\n    numeric: true,\n    label: \"Direct Dependencies\"\n  }\n];\n\n/**\n * A specific custom table header for packages.\n * It handles sorting individual columns.\n */\nfunction EnhancedTableHead({ order, orderBy, onRequestSort }) {\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding=\"normal\"\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  /** the function used to sort an individual column */\n  onRequestSort: PropTypes.func.isRequired,\n  /** the order in which the column is sorted on*/\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  /** The column in which to order the table by */\n  orderBy: PropTypes.string.isRequired\n};\n\nexport default EnhancedTableHead;\n","// react\nimport React from \"react\";\n\nimport { Typography, Grid } from \"@material-ui/core\";\nimport GavelIcon from \"@material-ui/icons/Gavel\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\n\n\n/**\n * Graph hover model appears when you hover over a node on the graph.\n */\nconst Popup = ({ node }) => {\n  return (\n    <div>\n      <Grid container alignItems=\"center\">\n        <Grid item xs={6}>\n          <Typography variant=\"h6\">\n            <b>{node.value.id}</b>\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography ml={2} variant=\"body1\">\n            v{node.value.version ?? \"NaN\"}\n          </Typography>\n        </Grid>\n      </Grid>\n      <Typography gutterBottom variant=\"body2\">\n        {node.value?.metadata?.summary ?? \"NaN\"}\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item>\n          <IconText\n            text={node.value?.metadata?.license ?? \"NaN\"}\n            icon={<GavelIcon />}\n          />\n        </Grid>\n        <Grid item>\n          <IconText\n            ml={2}\n            text={\n              node.value?.latestVersion\n                ? \"Latest version is installed\"\n                : \"Installed version is NOT the latest.\"\n            }\n            icon={<BookmarkIcon />}\n          />\n        </Grid>\n      </Grid>\n      <Typography variant=\"body2\" mt={2}>\n        {node.value?.justifications?.header}\n      </Typography>\n    </div>\n  );\n};\n\nPopup.propTypes = {\n}\n\nexport default Popup;\n","// react\nimport React, { useEffect, useRef, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// utils and configs\nimport { options } from \"config\";\n\n// vis-network\nimport { Network, DataSet } from \"vis-network/standalone\";\n\n// material ui\nimport { makeStyles } from \"@material-ui/styles\";\n\n// local\nimport Popup from \"../Popup\";\nimport {SelectedPackageContext} from \"../../../routes/AdviseDetails\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexFlow: \"column nowrap\"\n  },\n  canvas: {\n    flex: \"1 1 auto\",\n    height: \"50vh\"\n  }\n}));\n\n/**\n * Renders a network graph visualization using `vis-network`.\n */\nconst NetworkGraph = ({ mergedGraph, ...props }) => {\n  const classes = useStyles();\n  const visJsRef = useRef(null);\n  const {selected} = useContext(SelectedPackageContext)\n\n\n  // create the graph\n  useEffect(() => {\n    if (!selected || !mergedGraph) {\n      return;\n    }\n\n    const selectedNode = mergedGraph.nodes.get(selected)\n\n    let nodes = mergedGraph.findAllNodesOnAllPaths(selectedNode, \"*App\");\n\n    nodes.set(\"*App\", mergedGraph.nodes.get(\"*App\"));\n\n    // convert to vis graph format\n    const convertedNodes = new DataSet();\n    nodes.forEach(value => {\n      // popup element\n      const popup = document.createElement(\"div\");\n      ReactDOM.render(<Popup node={value} />, popup);\n\n      // default colors\n      let color = value.value.color ?? options.nodes.color;\n      let font = undefined;\n\n      // if node is root\n      if (value.key === \"*App\") {\n        color = \"#4fc1ea\";\n        font = { color: \"#4fc1ea\", strokeWidth: 3, size: 20 };\n      }\n      // if selected node\n      else if (value.key === selectedNode.key) {\n        color = \"#f39200\";\n      }\n\n      convertedNodes.add({\n        ...value.value,\n        color: color,\n        title:\n          value.key === selectedNode.key || value.key === \"*App\" ? undefined : popup,\n        font: font\n      });\n    });\n    const visData = {\n      nodes: convertedNodes,\n      edges: new DataSet(mergedGraph.visEdges)\n    };\n\n    const network =\n      visJsRef.current && new Network(visJsRef.current, visData, options);\n\n    // change curser when hovering and grabbing\n    // Get the canvas HTML element\n    var networkCanvas = document\n      .getElementById(\"mynetwork\")\n      .getElementsByTagName(\"canvas\")[0];\n\n    // changes the curser graphic depedning on where and what the mouse is doing\n    function changeCursor(newCursorStyle) {\n      networkCanvas.style.cursor = newCursorStyle;\n    }\n    network.on(\"hoverNode\", function() {\n      changeCursor(\"grab\");\n    });\n    network.on(\"blurNode\", function() {\n      changeCursor(\"default\");\n    });\n    network.on(\"dragStart\", function() {\n      changeCursor(\"grabbing\");\n    });\n    network.on(\"dragging\", function() {\n      changeCursor(\"grabbing\");\n    });\n    network.on(\"dragEnd\", function() {\n      changeCursor(\"grab\");\n    });\n\n    // fix (stick in place) node when done dragging\n    network.on(\"dragEnd\", function(params) {\n      if (params.nodes.length !== 0 && !network.isCluster(params.nodes[0])) {\n        network.editNode(params.nodes[0]);\n      }\n    });\n\n    // hover over node\n    network.on(\"dragEnd\", function(params) {\n      if (params.nodes.length !== 0 && !network.isCluster(params.nodes[0])) {\n        network.editNode(params.nodes[0]);\n      }\n    });\n\n  }, [selected, mergedGraph]);\n\n  return (\n    <div className={`${classes.root} ${props.className}`}>\n      <div ref={visJsRef} id=\"mynetwork\" className={classes.canvas} />\n    </div>\n  );\n};\n\nNetworkGraph.propTypes = {\n}\n\nexport default NetworkGraph;\n","// React\nimport React, {useContext, useMemo} from \"react\";\n\n// material-ui\nimport { Typography, Grid, Box, Paper, Link, Button } from \"@material-ui/core\";\nimport GavelIcon from \"@material-ui/icons/Gavel\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\nimport NetworkGraphView from \"../NetworkGraphView\";\n\n// redux\nimport {SelectedPackageContext} from \"../../../routes/AdviseDetails\";\n\n/**\n * Renders the selected package context variable's data. It will preform\n * a search of the list of packages using the selected package variable.\n */\nexport const SelectedPackage = ({mergedGraph}) => {\n  const {selected, setSelected} = useContext(SelectedPackageContext)\n\n  const selectedPackage = mergedGraph.nodes.get(selected);\n\n  const dependents = { removed: [], added: [], version: [], unchanged: [] };\n  [...selectedPackage?.parents]\n    .filter(p => p !== \"*App\")\n    .forEach(node => {\n      dependents[mergedGraph.nodes.get(node).value.change].push(node);\n    });\n\n  const justifications = useMemo(() => {\n    const justs = {}\n    selectedPackage?.value?.justifications?.thoth?.forEach(just => {\n      justs[just.type] = [...(justs[just.type] ?? []), just]\n    })\n\n    return justs\n  }, [selectedPackage])\n\n  return (\n    <Box>\n      <Paper sx={{ padding: 2 }}>\n        <Grid container alignItems=\"center\" mb={1}>\n          <Grid item>\n            <Typography variant=\"h3\">\n              <b>{selectedPackage?.value?.metadata?.name}</b>\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography ml={2} variant=\"h6\">\n              v{selectedPackage?.value?.metadata?.version ?? \"NaN\"}\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <Typography gutterBottom variant=\"body1\">\n          {selectedPackage?.value?.metadata?.summary ?? \"NaN\"}\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item>\n            <IconText\n              text={selectedPackage?.value?.metadata?.license ?? \"NaN\"}\n              icon={<GavelIcon />}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <Paper sx={{ padding: 2, marginTop: 2 }}>\n        <Typography variant=\"h5\">Thoth Justifications</Typography>\n        <Typography variant=\"body1\" mt={2}>\n          {selectedPackage?.value?.justifications?.header}\n        </Typography>\n        {selectedPackage?.value?.justifications?.reasons?.length ? (\n          <ul>\n            {selectedPackage?.value?.justifications?.reasons.map((reason, i) => {\n              return (\n                    <li key={i + reason.reason}>\n                      <Typography variant=\"body1\" mt={2}>\n                        <Link\n                            underline=\"hover\"\n                            onClick={() => setSelected(reason.package)}\n                        >\n                          {reason.package}\n                        </Link>\n                        {reason.reason}\n                      </Typography>\n                    </li>\n              );\n            })}\n          </ul>\n        ) : null}\n\n        {Object.entries(justifications).map(([type, reasons]) => {\n          return(\n              <React.Fragment key={type}>\n                <Typography variant=\"h6\" mt={2}>\n                  {type} Justifications\n                </Typography>\n                {reasons.map((reason, i) => {\n                  return(\n                      <Grid container alignItems=\"center\" ml={3} key={reason.message + i}>\n                        <Grid item xs={10}>\n                          <Typography variant=\"body1\" mt={1}>\n                            {reason.message}\n                          </Typography>\n                          <Typography variant=\"body2\" ml={3} mt={0.5}>\n                            {reason.advisory}\n                          </Typography>\n                        </Grid>\n                        <Grid item>\n                          <Button href={reason.link}>READ MORE</Button>\n                        </Grid>\n                      </Grid>\n                  )\n                })}\n              </React.Fragment>\n          )\n        })}\n      </Paper>\n\n      <Paper sx={{ padding: 2, marginTop: 2 }}>\n        <Typography variant=\"h5\" mb={2}>\n          Package Origins\n        </Typography>\n        <Typography variant=\"body1\" mb={2}>\n          {[...selectedPackage?.parents].filter(p => p !== \"*App\")?.length === 0\n            ? selectedPackage?.value?.label +\n              \" is not a dependent of any package in this Python environment\"\n            : \"There are \" +\n              [...selectedPackage?.parents].filter(p => p !== \"*App\")?.length +\n              \" package(s) that have \" +\n              selectedPackage?.value?.label +\n              \" as a direct dependency. Of those package(s)\"}\n\n          {Object.keys(dependents).map((change) => {\n            if (dependents[change].length === 0) {\n              return null;\n            }\n\n            return (\n              <React.Fragment>\n                {\", \" +\n                  dependents[change].length +\n                  (change === \"version\"\n                    ? \" had a version change \"\n                    : (dependents[change].length === 1 ? \" was \" : \" were \") +\n                      change) +\n                  \" (\"}\n                {dependents[change].map((p, i, a) => {\n                  let text = p;\n                  if (i !== a.length - 1) {\n                    text += \", \";\n                  }\n                  return (\n                    <Link underline=\"hover\" onClick={() => setSelected(p)}>\n                      {text}\n                    </Link>\n                  );\n                })}\n                {\")\"}\n              </React.Fragment>\n            );\n          })}\n          {\".\"}\n        </Typography>\n\n        <NetworkGraphView mergedGraph={mergedGraph}/>\n      </Paper>\n    </Box>\n  );\n};","import React, {useState} from \"react\";\nimport {Grid, Paper, Typography} from \"@material-ui/core\";\nimport SearchBar from \"components/Elements/SearchBar\";\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\nimport {AdviseTableView} from \"../components\";\nimport {SelectedPackage} from \"../features\"\n\nexport const SelectedPackageContext = React.createContext();\n\nexport const AdviseDetails = ({mergedGraph}) => {\n    const [search, setSearch] = useState(\"\");\n    const [selected, setSelected] = useState();\n\n    const handleSearch = event => {\n        setSearch(event.target.value);\n    };\n\n    if(!mergedGraph) {\n        return null\n    }\n\n    return (\n            <SelectedPackageContext.Provider value={{selected, setSelected}}>\n                <Grid\n                    container\n                    spacing={2}\n                    justifyContent=\"center\"\n                    alignItems=\"flex-start\"\n                    mt={2}\n                >\n                    <Grid item s={12} md={6}>\n                        <Paper sx={{ padding: 2 }}>\n                            <SearchBar\n                                onChange={handleSearch}\n                                lefticon={<SearchRoundedIcon />}\n                            />\n                            <AdviseTableView\n                                search={search}\n                                filteredGraph={mergedGraph}\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid item s={12} md={6}>\n                        {!selected ? (\n                            <Typography variant=\"body1\" align=\"center\">\n                                No package selected\n                            </Typography>\n                        ) : (\n                            <SelectedPackage mergedGraph={mergedGraph}/>\n                        )}\n                    </Grid>\n                </Grid>\n            </SelectedPackageContext.Provider>\n    );\n};","import React, {useContext, useEffect, useState} from \"react\";\n\nimport {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Typography\n} from \"@material-ui/core\";\n\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport RemoveRoundedIcon from \"@material-ui/icons/RemoveRounded\";\nimport CircleOutlinedIcon from \"@material-ui/icons/CircleOutlined\";\n\n// utils\nimport { getComparator, stableSort } from \"./utils\";\n\n// local\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport PropTypes from \"prop-types\";\nimport {SelectedPackageContext} from \"../../routes/AdviseDetails\";\n\n/**\n * The table cells and total structure specific to\n * python packages.\n */\nexport function AdviseTableView({\n  search =\"\",\n  filteredGraph\n}) {\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"name\");\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n  const [rows, setRows] = React.useState([]);\n  const {selected, setSelected} = useContext(SelectedPackageContext) ?? {setSelected: () => console.log(\"missing callback\")}\n\n\n  // format data\n  useEffect(() => {\n    if (!filteredGraph) {\n      return;\n    }\n\n    setPage(0);\n\n    const newRows = [];\n    filteredGraph.nodes.forEach(node => {\n      if (node.value.depth === -1) {\n        return;\n      }\n      newRows.push({\n        name: node.value.label,\n        key: node.key,\n        warnings: [],\n        depth: node.value?.depth ?? -1,\n        license: node?.value?.metadata?.license,\n        dependencies: node.adjacents.size,\n        change: node.value?.change,\n        summary: node?.value?.metadata?.summary\n      });\n    });\n    setRows(newRows);\n  }, [filteredGraph]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <TableContainer>\n        <Table sx={{ minWidth: 750 }} size=\"medium\">\n          <EnhancedTableHead\n            order={order}\n            orderBy={orderBy}\n            onRequestSort={handleRequestSort}\n          />\n          <TableBody>\n            {stableSort(rows, getComparator(order, orderBy))\n              .filter(row => row.name.includes(search))\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => {\n                const labelId = `enhanced-table-checkbox-${index}`;\n\n                const iconColor =\n                  row.change === \"removed\"\n                    ? \"error\"\n                    : row.change === \"added\"\n                    ? \"success\"\n                    : undefined;\n\n                return (\n                  <React.Fragment key={row.name}>\n                    <TableRow\n                      hover\n                      onClick={() => setSelected(row.key)}\n                      tabIndex={-1}\n                      selected={selected === row.key}\n                    >\n                      <TableCell component=\"th\" id={labelId} scope=\"row\">\n                        <Box display=\"flex\">\n                          {row.change === \"removed\" ? (\n                            <RemoveRoundedIcon color={iconColor} />\n                          ) : row.change === \"added\" ? (\n                            <AddRoundedIcon color={iconColor} />\n                          ) : (\n                            <CircleOutlinedIcon />\n                          )}\n                          <Typography ml={2}>{row.name}</Typography>\n                        </Box>\n                      </TableCell>\n                      <TableCell align=\"right\">{row.depth}</TableCell>\n                      <TableCell align=\"right\">{row.license}</TableCell>\n                      <TableCell align=\"right\">{row.dependencies}</TableCell>\n                    </TableRow>\n\n                    <TableRow>\n                      <TableCell\n                        style={{ paddingBottom: 0, paddingTop: 0 }}\n                        colSpan={6}\n                      />\n                    </TableRow>\n                  </React.Fragment>\n                );\n              })}\n            {emptyRows > 0 && (\n              <TableRow\n                style={{\n                  height: 53 * emptyRows\n                }}\n              >\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Box>\n  );\n}\n\nAdviseTableView.propTypes = {\n  /** the text value used to filter the cells in the table */\n  search: PropTypes.string,\n}\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  lockfile: {\n    overflow: \"scroll\",\n    paddingLeft: theme.spacing(1)\n  }\n}));\n\n/**\n * Renders out a Pipfile.lock file and attaches\n * `<a>` tags to package names, which is used to\n *  scroll to certain spot in the lock file\n */\nexport const LockfileView = ({ file }) => {\n  const classes = useStyles();\n\n  return (\n    <Typography variant=\"caption\">\n      <pre>\n        <div\n          className={classes.lockfile}\n          dangerouslySetInnerHTML={{\n            __html: JSON.stringify(file, undefined, 4)?.replaceAll(\n              new RegExp(\n                '(\"' + Object.keys(file?.default)?.join('\"|\"') + '\")',\n                \"g\"\n              ),\n              match => {\n                return `<a id=\"${match.slice(1, -1)}\">${match}</a>`;\n              }\n            )\n          }}\n        />\n      </pre>\n    </Typography>\n  );\n};\n\nLockfileView.propTypes = {\n    /** The Pipfile.lock json object */\n  file: PropTypes.shape({ default: PropTypes.object.isRequired })\n};","import React from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport InfoCard from \"components/Elements/InfoCard\";\nimport {DependenciesMetric, CustomCardAction, LicenseMetric, AdviseMetric} from \"../components\";\n\n\nexport const AdviseSummary = ({metrics}) => {\n    const [pipfile, setPipfile] = React.useState(\"newGraph\");\n\n    const handlePipfile = (event, newPipfile) => {\n        if (newPipfile?.length) {\n            setPipfile(newPipfile);\n        }\n    };\n\n    return (\n        <Grid container spacing={3} mb={3} mt={1}>\n            <Grid item xs={12} md={6}>\n                <InfoCard\n                    cardMeta={{\n                        title: \"Thoth Advise Summary\"\n                    }}\n                    cardBody={<AdviseMetric metric={metrics?.advise} />}\n                />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <InfoCard\n                    cardMeta={{\n                        title: \"Dependencies Summary\"\n                    }}\n                    cardBody={\n                        <DependenciesMetric\n                            all={metrics?.[pipfile]?.dependencies?.all}\n                            roots={metrics?.[pipfile]?.dependencies?.roots}\n                        />\n                    }\n                    cardAction={\n                        <CustomCardAction value={pipfile} onChange={handlePipfile} />\n                    }\n                />\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <InfoCard\n                    cardMeta={{\n                        title: \"Licenses Summary\"\n                    }}\n                    cardBody={\n                        <LicenseMetric metric={metrics?.[pipfile]?.licenses} />\n                    }\n                    cardAction={\n                        <CustomCardAction value={pipfile} onChange={handlePipfile} />\n                    }\n                />\n            </Grid>\n        </Grid>\n    );\n};","import axios from \"axios\";\nimport {THOTH_URL} from \"config\"\nimport {useQueries, useQuery} from 'react-query';\n\n\nexport const getPackageDependencies = (\n    name,\n    version,\n    index = \"https://pypi.org/simple\"\n) => {\n    return axios\n        .get(THOTH_URL + \"/python/package/dependencies\", {\n            params: {\n                name: name,\n                version: version,\n                index: index\n            },\n            headers: {\n                accept: \"application/json\"\n            }\n        })\n};\n\nexport const usePackageDependencies = (name, version, config) => {\n    return useQuery({\n        ...config,\n        queryKey: ['packageDependencies', name, version],\n        queryFn: () => getPackageDependencies(name, version),\n    });\n};\n\nexport const usePackagesDependencies = (packages, config) => {\n    return useQueries(packages.map(p => {\n        return {\n            ...config,\n            queryKey: ['packageDependencies', p.name, p.version],\n            queryFn: () => getPackageDependencies(p.name, p.version),\n        }\n    }))\n};","import axios from \"axios\";\nimport {THOTH_URL} from \"config\"\nimport {useQuery} from 'react-query';\n\n/**\n * An async function that returns a promise for `{base_url}/advise/python`\n *\n * @param analysis_id - the advise document id (ex: `adviser-211112223258-38af1a4746733b53`)\n */\nexport const getAdviseDocument = async (analysis_id) => {\n    return axios\n        .get(THOTH_URL + \"/advise/python/\" + analysis_id, {\n            headers: {\n                accept: \"application/json\"\n            }\n        })\n};\n\nexport const useAdviseDocument = (analysis_id, config) => {\n    return useQuery({\n        ...config,\n        queryKey: ['adviseDocument', analysis_id],\n        queryFn: () => getAdviseDocument(analysis_id),\n    });\n};\n","import axios from \"axios\";\nimport {THOTH_URL} from \"config\"\nimport {useQuery} from 'react-query';\n\n/**\n * An async function that returns a promise for `{base_url}/advise/python/logs`\n *\n * @param analysis_id - the advise document id (ex: `adviser-211112223258-38af1a4746733b53`)\n */\nexport const getAdviseLogs = async (analysis_id) => {\n    return axios\n        .get(THOTH_URL + \"/advise/python/\" + analysis_id + \"/log\", {\n            headers: {\n                accept: \"application/json\"\n            }\n        })\n};\n\nexport const useAdviseLogs = (analysis_id, config) => {\n    return useQuery({\n        ...config,\n        queryKey: ['adviseLogs', analysis_id],\n        queryFn: () => getAdviseLogs(analysis_id),\n    });\n};\n","/**\n * Graph node/vertex that hold adjacencies nodes\n * For performance, uses a HashSet instead of array for adjacents.\n */\nexport class Node {\n  constructor(key, value) {\n    this.adjacents = new Set(); // adjacency list\n    this.key = key; // key\n    this.value = value;\n  }\n\n  /**\n   * Add node to adjacency list\n   * Runtime: O(1)\n   * @param {Node} node\n   */\n  addAdjacent(node) {\n    this.adjacents.add(node);\n  }\n\n  /**\n   * Check if a Node is adjacent to other\n   * Runtime: O(1)\n   * @param {Node} node\n   */\n  isAdjacent(node) {\n    return this.adjacents.has(node);\n  }\n\n  /**\n   * Get all adjacent nodes\n   */\n  getAdjacents() {\n    return Array.from(this.adjacents);\n  }\n}\n","import { Node } from \"utils/Node\";\n\n/**\n * Graph data structure implemented with an adjacent list\n */\nexport class Graph {\n  constructor() {\n    this.nodes = new Map();\n  }\n\n  /**\n   * Add a node to the graph.\n   */\n  addVertex(key, value) {\n    if (this.nodes.has(key)) {\n      return this.nodes.get(key);\n    }\n\n    const vertex = new Node(key, value);\n    this.nodes.set(key, vertex);\n    return vertex;\n  }\n\n  /**\n   * Create a connection between the source node and the destination node.\n   * If the nodes don't exist, then it will make them on the fly.\n   */\n  addEdge(source, destination) {\n    const sourceNode = this.nodes.get(source);\n    const destinationNode = this.nodes.get(destination);\n\n    sourceNode.addAdjacent(destinationNode);\n\n    return [sourceNode, destinationNode];\n  }\n\n  /**\n   * True if two nodes are adjacent.\n   */\n  areAdjacents(source, destination) {\n    const sourceNode = this.nodes.get(source);\n    const destinationNode = this.nodes.get(destination);\n\n    if (sourceNode && destinationNode) {\n      return sourceNode.isAdjacent(destinationNode);\n    }\n\n    return false;\n  }\n\n  /**\n   * Generic graph search where we can pass a bfs or dfs\n   */\n  *graphSearch(first, type = \"bfs\") {\n    const visited = new Map();\n    const visitList = [];\n\n    visitList.push(first);\n\n    while (visitList.length !== 0) {\n      const node = type === \"dfs\" ? visitList.pop() : visitList.shift();\n      if (node && !visited.has(node)) {\n        yield node;\n        visited.set(node);\n        node.getAdjacents().forEach(adj => visitList.push(adj));\n      }\n    }\n  }\n\n  /**\n   * Find a path between source and destination\n   * It might not be the optimal path\n   */\n  findPath(source, destination, path = new Map()) {\n    const sourceNode = this.nodes.get(source);\n    const destinationNode = this.nodes.get(destination);\n    const newPath = new Map(path);\n\n    if (!destinationNode || !sourceNode) return [];\n\n    newPath.set(sourceNode);\n\n    if (source === destination) {\n      return Array.from(newPath.keys());\n    }\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const node of sourceNode.getAdjacents()) {\n      if (!newPath.has(node)) {\n        const nextPath = this.findPath(node.value, destination, newPath);\n        if (nextPath.length) {\n          return nextPath;\n        }\n      }\n    }\n\n    return [];\n  }\n\n  findAllNodesOnAllPaths(source, destination, visited = new Map()) {\n    const visitList = [];\n\n    visitList.push(source);\n\n    while (visitList.length !== 0) {\n      const node = visitList.pop();\n      if (node.key === destination) {\n        continue;\n      }\n      if (node && !visited.has(node.key)) {\n        visited.set(node.key, node);\n        node.parents.forEach(parent => visitList.push(this.nodes.get(parent)));\n      }\n    }\n\n    return visited;\n  }\n\n  /**\n   * Find all paths from source to destination\n   */\n  findAllPaths(source, destination, path = new Map()) {\n    const sourceNode = this.nodes.get(source);\n    const destinationNode = this.nodes.get(destination);\n    const newPath = new Map(path);\n\n    if (!destinationNode || !sourceNode) return [];\n\n    newPath.set(sourceNode);\n\n    if (source === destination) {\n      return [Array.from(newPath.keys())];\n    }\n\n    const paths = [];\n    sourceNode.getAdjacents().forEach(node => {\n      if (!newPath.has(node)) {\n        const nextPaths = this.findAllPaths(\n          node.value.id,\n          destination,\n          newPath\n        );\n        nextPaths.forEach(nextPath => {\n          paths.push(nextPath);\n        });\n      }\n    });\n    return paths;\n  }\n}\n","import {useMemo, useEffect, useState} from \"react\";\n\n// utils\nimport { Graph } from \"utils/Graph\";\n\n// api\nimport {usePackagesDependencies} from \"../api\";\nimport {usePackagesMetadata} from \"features/misc/api\";\n\nexport function useGraph(data, knownRoots) {\n    const allMetadata = usePackagesMetadata(data);\n    const allDependencies = usePackagesDependencies(data);\n\n    const allMetadataStatus = useMemo(() => {\n        const status = {\n            loading: false,\n            error: false,\n            success: false\n        }\n        if(allMetadata.length > 0) {\n            allMetadata.forEach(query => {\n                switch (query.status) {\n                    case \"error\":\n                        status.error = true\n                        break;\n                    case \"success\":\n                        status.success = true\n                        break;\n                    default:\n                        status.loading = true;\n                }\n            })\n        }\n        else {\n            return \"loading\"\n        }\n\n       if(status.error) {\n           return \"error\"\n       }\n       else if(status.loading) {\n           return \"loading\"\n       }\n       else {\n           return \"success\"\n       }\n\n    }, [allMetadata])\n\n    const allDependenciesStatus = useMemo(() => {\n        let isLoading = false;\n\n        if(allDependencies.length > 0) {\n            allDependencies.forEach(query => {\n                if(query.status === \"loading\") {\n                    isLoading = true\n                }\n            })\n        }\n        else {\n            return \"loading\"\n        }\n\n        return isLoading ? \"loading\" : \"success\";\n\n    }, [allDependencies])\n\n    const [graph, setGraph] = useState();\n\n    useEffect(() => {\n        if(allMetadataStatus === \"error\") {\n            // handle error\n            return;\n        }\n        else if (allDependenciesStatus === \"loading\" || allMetadataStatus === \"loading\") {\n            // not done loading\n            return;\n        }\n\n        // create graph\n        const tempGraph = new Graph();\n\n        // create dependencies object\n        const reformattedDeps = new Map();\n         allDependencies.forEach(query => {\n            if(query.isSuccess) {\n                reformattedDeps.set(query.data.data.parameters.name, query.data.data.dependencies)\n            }\n        })\n\n        // merge data together\n        allMetadata.forEach(query => {\n            const metadata = query.data.data.metadata ?? query.data.data.info;\n\n            const value = {\n                id: metadata.name.toLowerCase().replace(\".\", \"-\"),\n                label: metadata.name,\n                metadata: metadata\n            };\n\n            // add package to graph\n            const node = tempGraph.addVertex(value.id, value);\n            node.parents = new Set();\n        })\n\n        const notRoot = [];\n         // cross check what dependencies the package has through thoth's database\n        // this is used to setup edges between nodes in the graph\n        Array.from(tempGraph.nodes.entries()).forEach(([key, value]) => {\n            // get dependencies from thoth\n            if(reformattedDeps.has(key)) {\n                reformattedDeps.get(key).forEach(dep => {\n                    const adjacentNode = tempGraph.nodes.get(dep.name);\n\n                    // if package exists in lockfile\n                    if (adjacentNode) {\n                        // add edge connecting parent and dependency\n                        tempGraph.addEdge(key, adjacentNode.value.id);\n                        // set parent\n                        adjacentNode.parents.add(key);\n                        notRoot.push(adjacentNode.value.id);\n                    }\n                });\n            }\n            else {\n                // if no record in thoth, then use metadata dependencies\n                // these are not always as accurate\n                if (value?.value?.metadata?.requires_dist) {\n                    // for each dependency, parse to get name\n                    value.value.metadata.requires_dist.forEach(async adj => {\n                        const adjacentNode = tempGraph.nodes.get(\n                            adj\n                                .split(\" \", 1)[0]\n                                .toLowerCase()\n                                .replace(\".\", \"-\")\n                        );\n\n                        // if package exists in lockfile\n                        if (adjacentNode) {\n                            // add edge connecting parent and dependency\n                            tempGraph.addEdge(key, adjacentNode.value.id);\n                            // set parent\n                            adjacentNode.parents.add(key);\n                            notRoot.push(adjacentNode.value.id);\n                        }\n                    });\n                }\n            }\n        })\n\n        /**\n         * Create graph using a traversal algorithm\n         */\n\n        // add app node to graph\n        const app = tempGraph.addVertex(\"*App\", {\n            id: \"*App\",\n            label: \"App\",\n            depth: -1\n        });\n\n        notRoot.push(\"*App\");\n\n        const visited = new Map();\n        const visitList = [];\n\n        // get roots and connect to app\n        tempGraph.nodes.forEach((value, key, map) => {\n            if (!notRoot.includes(key) || Object.keys(knownRoots).includes(key)) {\n                const node = map.get(key);\n                node.value.depth = 0;\n                node.parents.add(\"*App\");\n                visitList.push(node);\n                tempGraph.addEdge(app.key, node.key);\n            }\n        });\n\n        // set depth and parent packages using dfs\n        while (visitList.length !== 0) {\n            const node = visitList.pop();\n            if (node && !visited.has(node)) {\n                visited.set(node);\n\n                const adjs = node.getAdjacents();\n\n                for (var i = 0; i < adjs.length; i++) {\n                    // update depth\n                    adjs[i].value.depth = Math.min(\n                        node.value.depth + 1,\n                        adjs[i].value.depth ?? node.value.depth + 2\n                    );\n                    visitList.push(adjs[i]);\n                }\n            }\n        }\n\n        setGraph(tempGraph)\n// eslint-disable-next-line react-hooks/exhaustive-deps\n     }, [allMetadataStatus, allDependenciesStatus, knownRoots]);\n\n    return graph\n\n}\n","import {useEffect, useMemo, useState} from \"react\";\n\nexport function useMetrics(oldGraph, newGraph, mergedGraph, adviseDocument) {\n    const adviseMetric = useAdviseMetric(mergedGraph, adviseDocument);\n    const oldDependencyMetric = useDependencyMetric(oldGraph);\n    const newDependencyMetric = useDependencyMetric(newGraph);\n    const oldLicenseMetric = useLicenseMetric(oldGraph);\n    const newLicenseMetric = useLicenseMetric(newGraph);\n\n    return useMemo(() => {\n        const base = {\n            advise: null,\n            oldGraph: {dependencies: null, licenses: null},\n            newGraph: {dependencies: null, licenses: null}\n        }\n\n        if (adviseMetric) {\n            base.advise = adviseMetric;\n        }\n        if (oldDependencyMetric) {\n            base.oldGraph.dependencies = oldDependencyMetric;\n        }\n        if (oldDependencyMetric) {\n            base.oldGraph.licenses = oldLicenseMetric;\n        }\n        if (newDependencyMetric) {\n            base.newGraph.dependencies = newDependencyMetric;\n        }\n        if (newLicenseMetric) {\n            base.newGraph.licenses = newLicenseMetric;\n        }\n\n        return base\n\n\n    }, [adviseMetric, oldDependencyMetric, oldLicenseMetric, newDependencyMetric, newLicenseMetric])\n\n}\n\nexport const useDependencyMetric = (graph) => {\n    const [metric, setMetric] = useState()\n\n    useEffect(() => {\n        if (!graph) {\n            return;\n        }\n\n        let base = {\n            all: {},\n            roots: {}\n        };\n\n        const roots = [];\n        graph.nodes.forEach(value => {\n            if (value.value.depth === 0) {\n                roots.push(value.key);\n            }\n        });\n\n        const visited = new Set();\n\n        // for each starting node\n        roots.forEach(root => {\n            const bfs = graph.graphSearch(graph.nodes.get(root));\n            const visitedOrder = Array.from(bfs);\n\n            visitedOrder.forEach(node => {\n                if (node.key === \"*App\") {\n                    return;\n                }\n\n                if (visited.has(node.value.id)) {\n                    return;\n                } else {\n                    visited.add(node.value.id);\n                }\n\n                const depth =\n                    node.value.depth === 0\n                        ? \"roots\"\n                        : node.value.depth === 1\n                            ? \"direct\"\n                            : \"indirect\";\n\n                // dependency metric\n                base = {\n                    all: {\n                        ...base.all,\n                        [depth]: (base.all[depth] ?? 0) + 1\n                    },\n                    roots: {\n                        ...base.roots,\n                        [root]: {\n                            ...(base.roots[root] ?? null),\n                            [depth]: (base.roots?.[root]?.[depth] ?? 0) + 1\n                        }\n                    }\n                };\n            });\n        });\n\n        setMetric(base)\n    }, [graph]);\n\n    return metric;\n}\n\nexport const useLicenseMetric = (graph) => {\n    const [metric, setMetric] = useState()\n\n    useEffect(() => {\n        if (!graph) {\n            return;\n        }\n\n        let base = {};\n\n        const roots = [];\n        graph.nodes.forEach(value => {\n            if (value.value.depth === 0) {\n                roots.push(value.key);\n            }\n        });\n\n        const visited = new Set();\n\n\n        // for each starting node\n        roots.forEach(root => {\n            const bfs = graph.graphSearch(graph.nodes.get(root));\n            const visitedOrder = Array.from(bfs);\n\n            visitedOrder.forEach(node => {\n                if (node.key === \"*App\") {\n                    return;\n                }\n\n                if (visited.has(node.value.id)) {\n                    return;\n                } else {\n                    visited.add(node.value.id);\n                }\n\n                // licence metric\n                const packageLicenses = [];\n\n                // get general classification\n                (\n                    node?.value?.metadata?.classifier ??\n                    node?.value?.metadata?.classifiers\n                )?.forEach(classifier => {\n                    const parsed = classifier.split(\" :: \");\n\n                    if (parsed[0] === \"License\") {\n                        if (parsed[1] === \"OSI Approved\") {\n                            packageLicenses.push({\n                                generalLicense: parsed?.[2] ?? node.value.metadata.license,\n                                specificLicense: node.value.metadata.license,\n                                isOsiApproved: true\n                            });\n                        } else {\n                            packageLicenses.push({\n                                generalLicense: parsed?.[1] ?? node.value.metadata.license,\n                                specificLicense: node.value.metadata.license,\n                                isOsiApproved: false\n                            });\n                        }\n                    }\n                });\n\n                if (packageLicenses.length === 0) {\n                    packageLicenses.push({\n                        generalLicense: node.value.metadata.license,\n                        specificLicense: node.value.metadata.license,\n                        isOsiApproved: null\n                    });\n                }\n\n                // get specific classification\n                packageLicenses.forEach(license => {\n                    if(!base[license.generalLicense]) {\n                        base[license.generalLicense] = {\n                            packages: {},\n                            metadata: {\n                                isOsiApproved: license.isOsiApproved\n                            }\n                        }\n                    }\n\n                    base = {\n                        ...base,\n                        [license.generalLicense]: {\n                            ...base[license.generalLicense],\n                            packages: {\n                                ...(base[license.generalLicense].packages ?? null),\n                                [node.value.label]: {\n                                    depth: node.value.depth,\n                                    specific: license.specificLicense\n                                },\n                            }\n                        }\n                    };\n\n                });\n            });\n        });\n\n        setMetric(base)\n    }, [graph]);\n\n    return metric\n}\n\nexport const useAdviseMetric = (graph, adviseDocument) => {\n    const [metric, setMetric] = useState()\n\n    useEffect(() => {\n        if (!graph || !adviseDocument) {\n          return;\n        }\n\n        const base = {\n            added: 0,\n            removed: 0,\n            version: 0,\n            unchanged: 0,\n            justification: {},\n            build: null\n        }\n\n        // package changes\n        graph.nodes.forEach(node => {\n            switch (node.value.change) {\n                case \"added\":\n                    base.added++;\n                    break;\n                case \"removed\":\n                    base.removed++;\n                    break;\n                case \"version\":\n                    base.version++;\n                    break;\n                default:\n                    base.unchanged++;\n            }\n        });\n\n        //build environment\n        base.build = `We have analysed an application stack running on ${adviseDocument.metadata.os_release.name} ${adviseDocument.metadata.os_release.version}, running Python (${adviseDocument.metadata.python.implementation_name}) ${adviseDocument.metadata.python.major}.${adviseDocument.metadata.python.minor}.${adviseDocument.metadata.python.micro}. It was Adviser Job ID ${adviseDocument.metadata.document_id}, by ${adviseDocument.metadata.analyzer} v${adviseDocument.metadata.analyzer_version}.`;\n\n        //justification counts\n        adviseDocument?.result?.report?.products?.[0]?.justification.forEach(\n            justification => {\n                base.justification[justification.type] = base.justification[justification.type]\n                    ? base.justification[justification.type] + 1\n                    : 1;\n            }\n        );\n        setMetric(base)\n\n    }, [graph, adviseDocument]);\n\n    return metric\n}","export const AdviseNotFound = ({analysis_id}) => {\n    return <div>\"{analysis_id}\" not found</div>;\n};","import * as React from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport {Button} from \"@material-ui/core\";\n\n/**\n * Layout is used in most of the app and allows for backwards navigation.\n */\nexport const NavigationLayout = ({ children }) => {\n    const navigate = useNavigate();\n\n    return (\n        <>\n            <Button onClick={() => navigate(\"/\")}>go back</Button>\n            <div>\n                {children}\n            </div>\n        </>\n    );\n};","import React, {useMemo} from \"react\";\nimport {Route, Routes, useParams, Navigate} from 'react-router-dom';\n\n// layouts\nimport {AdviseLayout} from \"components/Layout\";\n\n// sub-routes\nimport {AdviseSummary} from \"./AdviseSummary\";\nimport {AdviseDetails} from \"./AdviseDetails\";\n\n// feature specific imports\nimport {useAdviseDocument, useAdviseLogs} from \"../api\";\nimport {formatLockfile} from \"../utils\";\nimport {AdviseHeader} from \"../components\";\nimport {useMetrics, useMergeGraphs, useGraph} from \"../hooks\";\n\n// misc\nimport {CircularProgress} from \"@material-ui/core\";\nimport {AdviseNotFound} from \"./AdviseNotFound\";\nimport {NavigationLayout} from \"components/Layout/NavigationLayout\";\n\n\nexport const AdviseRoutes = () => {\n    // get document id\n    const { analysis_id } = useParams();\n\n    // api get thoth advise document\n    const adviseDocument = useAdviseDocument(analysis_id, { useErrorBoundary: false, refetchInterval: (data) => {\n        if(data?.data?.status) {\n            return 10000;\n        }\n        return false\n        }})\n\n    const logs = useAdviseLogs(analysis_id, { useErrorBoundary: false, refetchInterval: () => {\n            if(adviseDocument.data?.data?.status) {\n                return 10000;\n            }\n            return false\n        }})\n\n\n    // format init graph data\n    const initGraphData = useMemo(() => {\n        if(adviseDocument.isSuccess && adviseDocument.data.data?.result?.parameters?.project?.requirements_locked) {\n            return formatLockfile(adviseDocument.data.data.result.parameters.project.requirements_locked)\n        }\n    }, [adviseDocument]);\n\n    // format advise graph data\n    const adviseGraphData = useMemo(() => {\n        if(adviseDocument.isSuccess && adviseDocument.data.data?.result?.report?.products?.[0]?.project?.requirements_locked) {\n            return formatLockfile(adviseDocument.data.data.result.report.products[0].project.requirements_locked)\n        }\n    }, [adviseDocument]);\n\n\n\n    // create init graph\n    const initGraph = useGraph(initGraphData ?? [], adviseDocument.data?.data?.result?.parameters?.project?.requirements?.packages);\n    const adviseGraph = useGraph(adviseGraphData ?? [], adviseDocument.data?.data?.result?.report?.products?.[0]?.dependency_graph);\n\n    // merge graphs based on added, removed, changed packages\n    const mergedGraph = useMergeGraphs(initGraph, adviseGraph, adviseDocument.data?.data)\n\n    // compute metric data\n    const metrics = useMetrics(initGraph, adviseGraph, mergedGraph, adviseDocument.data?.data)\n\n    if (adviseDocument.isLoading) {\n        return (\n            <div className=\"w-full h-48 flex justify-center items-center\">\n                <CircularProgress />\n            </div>\n        );\n    }\n\n\n    if(!adviseDocument.data) {\n        return (\n            <NavigationLayout><AdviseNotFound analysis_id={analysis_id} /></NavigationLayout>\n        )\n    }\n\n    return (\n        <NavigationLayout>\n            <AdviseLayout header={<AdviseHeader adviseDocument={adviseDocument.data.data} logs={logs.data?.data?.log}/> }>\n                <Routes>\n                    <Route path=\"summary\" element={<AdviseSummary metrics={metrics}/>} />\n                    <Route path=\"details\" element={<AdviseDetails mergedGraph={mergedGraph}/>} />\n                    <Route path=\"*\" element={<Navigate to=\"summary\" />} />\n                </Routes>\n            </AdviseLayout>\n        </NavigationLayout>\n    );\n};","import {useEffect, useState} from \"react\";\nimport {useTheme} from \"@material-ui/core/styles\";\nimport {Graph} from \"utils/Graph\";\nimport {discoverPackageChanges} from \"../utils\";\n\nexport const useMergeGraphs = (oldGraph, newGraph, adviseDocument) => {\n    const [graph, setGraph] = useState()\n    const theme = useTheme();\n\n    useEffect(() => {\n        if (!oldGraph || !newGraph) {\n            return;\n        }\n\n        const visGraphEdges = [];\n        const mergedGraph = new Graph();\n\n        newGraph.nodes.forEach((value, key) => {\n            // get node\n            const combinedNode = newGraph.nodes.get(key);\n\n            // check if added, changed, or unchanged\n            // if added (old graph doesnt have the package)\n            if (!oldGraph.nodes.has(key)) {\n                combinedNode.value = {\n                    ...combinedNode.value,\n                    change: \"added\",\n                    label:\n                        value.value.label + \" \" + (value?.value?.metadata?.version ?? \"\"),\n                    font: {\n                        color: theme.palette.success.main\n                    },\n                    color: theme.palette.success.main,\n                    version: value?.value?.metadata?.version ?? \"\",\n                    dependencies: value.adjacents.size,\n                    license: value?.value?.metadata?.license ?? \"\",\n                    lockfile: [\"new\"]\n                };\n            }\n            // if the graph is not new then it is either equal or the version changed\n            else {\n                // set values that wont change\n                combinedNode.value = {\n                    ...combinedNode.value,\n                    label:\n                        value.value.label + \" \" + (value?.value?.metadata?.version ?? \"\"),\n                    dependencies: value.adjacents.size,\n                    license: value?.value?.metadata?.license ?? \"\",\n                    lockfile: [\"new\", \"old\"]\n                };\n                // if the nodes are equal (version are the same)\n                if (\n                    value?.value?.metadata?.version ===\n                    oldGraph.nodes.get(key)?.value?.metadata?.version\n                ) {\n                    combinedNode.value = {\n                        ...combinedNode.value,\n                        version: value?.value?.metadata?.version ?? \"\",\n                        change: \"unchanged\"\n                    };\n                }\n                // if the version changed\n                else {\n                    combinedNode.value = {\n                        ...combinedNode.value,\n                        change: \"version\",\n                        version: value?.value?.metadata?.version ?? \"\",\n                        oldVersion: oldGraph.nodes.get(key)?.value?.metadata?.version ?? \"\",\n                        font: {\n                            color: theme.palette.success.main\n                        }\n                    };\n\n                    combinedNode.parents = [\n                        ...new Set([\n                            ...combinedNode.parents,\n                            ...oldGraph.nodes.get(key)?.parents\n                        ])\n                    ];\n\n                    // merge the dependencies because they could be different\n                    oldGraph.nodes\n                        .get(key)\n                        .getAdjacents()\n                        .forEach(item => combinedNode.adjacents.add(item));\n                    newGraph.nodes\n                        .get(key)\n                        .getAdjacents()\n                        .forEach(item => combinedNode.adjacents.add(item));\n                }\n            }\n\n            mergedGraph.nodes.set(key, combinedNode);\n        });\n\n        oldGraph.nodes.forEach((value, key) => {\n            // get node\n            const combinedNode = oldGraph.nodes.get(key);\n\n            // only checking if package was removed\n            if (!newGraph.nodes.has(key)) {\n                combinedNode.value = {\n                    ...combinedNode.value,\n                    change: \"removed\",\n                    label:\n                        value.value.label + \" \" + (value?.value?.metadata?.version ?? \"\"),\n                    font: {\n                        color: theme.palette.error.main\n                    },\n                    color: theme.palette.error.main,\n                    version: value?.value?.metadata?.version ?? \"\",\n                    dependencies: value.adjacents.size,\n                    license: value?.value?.metadata?.license ?? \"\",\n                    lockfile: [\"old\"]\n                };\n\n                mergedGraph.nodes.set(key, combinedNode);\n            }\n        });\n\n        // add edges from old graph\n        oldGraph.nodes.forEach((value) => {\n            // set package edges\n            value.adjacents.forEach(adj => {\n                visGraphEdges.push({\n                    to: value.value.id,\n                    from: adj.value.id,\n                    lockfile: \"old\"\n                });\n            });\n        });\n\n        // add edges from new graph\n        newGraph.nodes.forEach((value) => {\n            // set package edges\n            value.adjacents.forEach(adj => {\n                visGraphEdges.push({\n                    to: value.value.id,\n                    from: adj.value.id,\n                    lockfile: \"new\"\n                });\n            });\n        });\n\n        // set justifications\n        discoverPackageChanges(mergedGraph.nodes, adviseDocument.result.report?.products?.[0]?.justification);\n\n        // add edges to merged graph Object\n        mergedGraph[\"visEdges\"] = visGraphEdges;\n\n        setGraph(mergedGraph)\n    }, [oldGraph, newGraph, adviseDocument, theme])\n\n\n    return graph\n}","// material-ui\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport GavelIcon from \"@material-ui/icons/Gavel\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\n\n// local\nimport IconText from \"components/Elements/IconText\";\n\n// utils\nimport timeSince from \"utils/timeSince\";\nimport PropTypes from \"prop-types\";\n\n// component styling\nconst useStyles = makeStyles(theme => ({\n  titleRow: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  marginLeft: {\n    marginLeft: theme.spacing(2)\n  },\n  linksRow: {\n    display: \"flex\"\n  }\n}));\n\n/**\n * A header for package metadata.\n */\nexport const PackageHeader = ({metadata}) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <div className={classes.titleRow}>\n        <Typography variant=\"h4\">\n          <b>{metadata?.name}</b>\n        </Typography>\n        <Typography ml={2} variant=\"h6\">\n          {metadata?.version ?? \"NaN\"}\n        </Typography>\n      </div>\n\n      <Typography gutterBottom variant=\"body1\">\n        {metadata?.summary ?? \"NaN\"}\n      </Typography>\n      <div className={classes.linksRow}>\n        <IconText text={metadata?.license ?? \"NaN\"} icon={<GavelIcon />} />\n        <IconText\n          className={classes.marginLeft}\n          text={\n            \"Latest version published \" +\n            timeSince(\n              new Date(\n                  metadata?.all_versions?.[metadata?.latest_version]?.date\n              )\n            ) +\n            \" ago.\"\n          }\n          icon={<BookmarkIcon />}\n        />\n      </div>\n    </div>\n  );\n};\n\nPackageHeader.propTypes = {\n    /** Package metadata object.*/\n    package_data: PropTypes.shape({\n        /** Name of package. */\n        name: PropTypes.string.isRequired,\n        /** Version of package. */\n        version: PropTypes.string.isRequired,\n        /** The latest version of the package. (used to calculate the time sense last update) */\n        latest_version: PropTypes.string,\n        /** Description of package. */\n        summary: PropTypes.string,\n        /** License of package */\n        license: PropTypes.string,\n        /** specific all versions object with each key being a version and having a param of date.\n         *\n         * ```\n         * all_versions: {\n         *     1.2.3: {\n         *         date: \"12-2-2020\"\n         *     }\n         * }\n         * ```\n         */\n        all_versions: PropTypes.object\n    })\n}","// React\nimport React from \"react\";\n\n// local\nimport {PackageHeader} from \"../components\";\n\n\n// material-ui\nimport {Grid} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\n// component styling\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: \"95%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        marginTop: theme.spacing(4)\n    }\n}));\n\n// The page that displays all analysis data\nexport const PackageOverview = ({metadata}) => {\n    const classes = useStyles();\n\n    return (\n        <Grid container className={classes.root}>\n            <Grid item xs={12}>\n                <PackageHeader metadata={metadata}/>\n            </Grid>\n        </Grid>\n    );\n};","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  bar: {\n    marginBottom: theme.spacing(1)\n  }\n}));\n\n/**\n * A metric card displaying dependency information of a single package.\n */\nexport const PackageDependencies = ({ metric }) => {\n  const classes = useStyles();\n  const totalDependencies =\n    (metric.all.direct ?? 0) + (metric.all.indirect ?? 0);\n\n  return (\n    <div>\n      <ProgressBar\n        value={metric.all.direct ?? 0}\n        total={totalDependencies}\n        label={\"Direct\"}\n        className={classes.bar}\n      />\n\n      <ProgressBar\n        value={metric.all.indirect ?? 0}\n        total={totalDependencies}\n        label={\"Indirect\"}\n      />\n    </div>\n  );\n};\n\nPackageDependencies.propTypes = {\n    /** An object holding metric info. */\n  metric: PropTypes.shape({\n        /**\n         * ```\n         * all: {\n         *     direct: 6,\n         *     indirect: 22\n         * }\n         * ```\n         */\n    all: PropTypes.shape({\n        /** Direct dependencies of the package. */\n      direct: PropTypes.number,\n        /** Indirect dependencies of the package (dependencies of direct and indirect packages) */\n      indirect: PropTypes.number\n    })\n  })\n};\n","// react\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Typography, Divider } from \"@material-ui/core\";\n\n// local\nimport ProgressBar from \"components/Elements/ProgressBar\";\n\nconst useStyles = makeStyles(theme => ({\n  bar: {\n    marginBottom: theme.spacing(1)\n  },\n  marginBottom: {\n    marginBottom: theme.spacing(2)\n  }\n}));\n\n/**\n * A metric card showing a package's (and its dependencies') licenses\n */\nexport const PackageLicenses = ({ metric }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"body2\" gutterBottom>\n        <b>License</b>\n      </Typography>\n      <Divider />\n      <Typography className={classes.marginBottom} variant=\"h6\">\n        {metric.root}\n      </Typography>\n      <Typography variant=\"body2\" gutterBottom>\n        <b>Dependency Licenses</b>\n      </Typography>\n      <Divider />\n\n      {Object.entries(metric?.all ?? {}).map(([key, value]) => {\n        return (\n          <ProgressBar\n            key={key}\n            value={Object.keys(value).length ?? 0}\n            total={metric.total}\n            label={key}\n            className={classes.bar}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nPackageLicenses.propTypes = {\n  metric: PropTypes.shape({\n      /** The total number of dependencies of the package */\n      total: PropTypes.number,\n      /** The license of the root package */\n    root: PropTypes.string,\n      /** key value object of package's dependencies' licenses\n       *\n       * ```\n       * all: {\n       *     MIT: {\n       *\n       *     }\n       * }\n       * ```\n       * */\n    all: PropTypes.object\n  }).isRequired\n};","export const PackageNotFound = ({package_name, package_version}) => {\n    return <div>\"{package_name}{package_version ? \" \" + package_version : \"\"}\" not found</div>;\n};","// React\nimport React  from \"react\";\nimport {Route, Routes, useParams} from \"react-router-dom\";\n\n// material-ui\nimport {CircularProgress} from \"@material-ui/core\";\n\n//api\nimport {usePackageMetadata} from \"features/misc/api\";\nimport {PackageOverview} from \"./PackageOverview\";\nimport {NotFound} from \"features/misc\";\nimport {PackageNotFound} from \"./PackageNotFound\";\nimport {NavigationLayout} from \"../../../components/Layout/NavigationLayout\";\n\n\n// The page that displays all analysis data\nexport const PackageRoutes = () => {\n    const params = useParams();\n    const metadata = usePackageMetadata(params.package_name, params[\"*\"])\n\n    if (metadata.isLoading) {\n        return (\n            <div className=\"w-full h-48 flex justify-center items-center\">\n                <CircularProgress />\n            </div>\n        );\n    }\n\n    if(!metadata.data) {\n        return (\n            <PackageNotFound package_name={params.package_name} package_version={params[\"*\"]} />\n        )\n    }\n\n    return (\n        <NavigationLayout>\n            <Routes>\n                <Route path=\"/:package_version\" element={<PackageOverview metadata={metadata.data.data.metadata ?? metadata.data.data.info}/>} />\n                <Route path=\"/\" element={<PackageOverview metadata={metadata.data.data.metadata ?? metadata.data.data.info}/>} />\n                <Route path=\"*\" status={404} element={<NotFound/>} />\n            </Routes>\n        </NavigationLayout>\n    );\n};","import {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport {Home} from \"features/home\";\nimport {NotFound} from \"features/misc\";\nimport {AdviseRoutes} from \"features/advise\";\nimport {PackageRoutes} from \"features/package\";\n\nexport const RouterConfig = () => {\n  return (\n      <BrowserRouter basename={\"/thoth-search\"}>\n          <Routes>\n            <Route exact path={\"/\"} element={<Home />} />\n            <Route exact path={\"advise/:analysis_id/*\"} element={<AdviseRoutes />} />\n            <Route path={\"package/:package_name/*\"} element={<PackageRoutes />}\n            />\n            <Route path=\"*\" status={404} element={<NotFound/>} />\n          </Routes>\n      </BrowserRouter>\n  );\n};\n\nexport default RouterConfig;\n","// material ui\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { createTheme } from \"@material-ui/core/styles\";\n\nconst themeLight = createTheme({\n    palette: {\n        background: {\n            default: \"#f9f9f9\"\n        },\n        primary: {\n            light: \"#f5a733\",\n            main: \"#f39200\",\n            dark: \"#aa6600\"\n        },\n        secondary: {\n            light: \"#72cdee\",\n            main: \"#4fc1ea\",\n            dark: \"#3787a3\"\n        },\n        text: {\n            priamry: \"#363636\",\n            secondary: \"#999\"\n        }\n    },\n    typography: {\n        fontFamily: [\"open sans\", \"sans-serif\"],\n        h4: {\n            fontWeight: 700,\n            fontSize: \"3rem\",\n            color: \"#363636\",\n            lineHeight: 1.125\n        },\n        h5: {\n            fontWeight: 600,\n            fontSize: \"2rem\",\n            lineHeight: 1.125,\n            color: \"#363636\"\n        },\n        h6: {\n            fontWeight: 600,\n            fontSize: \"1.2rem\",\n            color: \"#444f60\",\n            lineHeight: 1.5\n        },\n\n        body1: {\n            fontWeight: 400,\n            fontSize: \"1.25rem\",\n            lineHeight: 1.25,\n            color: \"#000\"\n        },\n\n        body2: {\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.5,\n            color: \"#000\"\n        },\n        subtitle1: {\n            fontWeight: 400,\n            fontSize: \"1.25rem\",\n            lineHeight: 1.25,\n            color: \"#999\"\n        },\n\n        subtitle2: {\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.5,\n            color: \"#999\"\n        }\n    }\n});\n\n\nfunction Theme({children}) {\n    return (\n        <ThemeProvider theme={themeLight}>\n            <CssBaseline />\n            {children}\n        </ThemeProvider>\n    );\n}\n\nexport default Theme;\n","import * as React from \"react\";\n\nexport const StateContext = React.createContext(undefined);\nexport const DispatchContext = React.createContext(undefined);\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        default:\n            throw new Error(\"State dispatch error\")\n    }\n}\n\nexport const initState = {};\n\n\nexport default function Global({children}) {\n    // for state control\n    const [state, dispatch] = React.useReducer(reducer, initState);\n    return (\n        <StateContext.Provider value={state}>\n            <DispatchContext.Provider value={dispatch}>\n                {children}\n            </DispatchContext.Provider>\n        </StateContext.Provider>\n    );\n}\n","import * as React from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { QueryClientProvider } from 'react-query';\nimport { queryClient } from 'lib/react-query';\nimport RouterConfig from \"routes/RouterConfig\";\nimport {Button} from \"@material-ui/core\";\nimport Theme from \"styles/Theme\";\nimport Global from \"stores/Global\";\nimport {MainLayout} from \"components/Layout\";\n\nconst ErrorFallback = () => {\n    return (\n        <div>\n            <h2>Oops, something went wrong :( </h2>\n            <Button onClick={() => window.location.assign(window.location.origin)}>\n                Refresh\n            </Button>\n        </div>\n    );\n};\n\nexport const AppProvider = () => {\n    return (\n        <Theme>\n            <Global>\n                <ErrorBoundary FallbackComponent={ErrorFallback}>\n                    <QueryClientProvider client={queryClient}>\n                        <MainLayout>\n                            <RouterConfig />\n                        </MainLayout>\n                    </QueryClientProvider>\n                </ErrorBoundary>\n            </Global>\n        </Theme>\n    );\n};","import React  from \"react\";\nimport {AppProvider} from \"./providers/app\";\n\nfunction App() {\n  return (<AppProvider />);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}