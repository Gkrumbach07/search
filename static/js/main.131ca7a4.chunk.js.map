{"version":3,"sources":["utils/recurseToRoot.js","configs/networkOptions.js","components/SearchBar.js","components/NetworkGraph.js","configs/theme.js","App.js","utils/getScaleFreeNetwork.js","reportWebVitals.js","index.js"],"names":["recurseToRoot","start","end","edges","starting_edges","filter","edge","includes","from","toString","combined","nodes","forEach","path","recurse","Set","selection","push","to","id","e","options","manipulation","enabled","editNode","nodeData","callback","fixed","x","interaction","hover","hoverConnectedEdges","selectConnectedEdges","selectable","chosen","smooth","color","arrowStrikethrough","arrows","type","background","border","shape","size","borderWidth","labelHighlightBold","font","strokeWidth","physics","hierarchicalRepulsion","damping","springLength","solver","minVelocity","useStyles","makeStyles","theme","root","display","flexDirection","alignItems","bar","margin","spacing","SearchBar","keyword","setKeyword","classes","className","TextField","variant","label","onChange","target","value","paper","flexFlow","flexGrow","minHeight","canvas","flex","height","NetworkGraph","data","searchText","visJsRef","useRef","network","useEffect","current","Network","get","updateOnly","networkCanvas","document","getElementById","getElementsByTagName","changeCursor","newCursorStyle","style","cursor","on","params","length","undefined","body","Paper","text","query","map","possible_results","node","selected","unselected_edges","unselected_nodes","concat","handleSearch","ref","themeLight","createMuiTheme","palette","default","App","nodeCount","connectionCount","i","String","conn","rand","Math","floor","random","cum","j","DataSet","getScaleFreeNetwork","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.131ca7a4.chunk.js","sourcesContent":["export function recurseToRoot(start, end, edges) {\n  // get edges coming off of node *start*\n  const starting_edges = edges.filter(edge => start.includes(edge.from.toString()));\n\n  // recurse from each starting edge to root (0)\n  // note there could be multiple starting points\n  let combined = { nodes: [], edges: [] }\n  starting_edges.forEach(edge => {\n    const path = recurse(edge, { nodes: [], edges: [] }, edges)\n    combined = {\n      nodes: [...new Set([...path.nodes,...combined.nodes])],\n      edges: [...new Set([...path.edges,...combined.edges])]\n    }\n  })\n\n  return combined\n}\n\nfunction recurse(edge, selection, edges) {\n  // add the edge id and nodes at either end of edge to selection\n  selection.nodes.push(edge.from, edge.to)\n  selection.edges.push(edge.id)\n\n  if(edge.to === 0) {\n    return selection\n  }\n  else {\n    // find the next edges to go\n    // combine voth recursion branches together while removing dups\n    // return combined branches as one\n    let combined = { nodes: [], edges: [] }\n    edges.filter(e => e.from === edge.to).forEach(e => {\n      const path = recurse(e, selection, edges)\n      combined = {\n        nodes: [...new Set([...path.nodes,...combined.nodes])],\n        edges: [...new Set([...path.edges,...combined.edges])]\n      }\n    })\n\n    return combined\n  }\n}\n","export const options = {\n\tmanipulation: {\n    enabled: false,\n    editNode: function(nodeData, callback) {\n      nodeData.fixed = !nodeData.fixed.x\n      callback(nodeData)\n    },\n\t},\n\tinteraction: {\n\t\thover: true,\n    hoverConnectedEdges: false,\n    selectConnectedEdges: false,\n\t\tselectable: false\n\t},\n\tedges: {\n\t\tchosen: false,\n\t\tsmooth: false,\n\t\tcolor: {\n\t\t\tcolor: \"#5c6470\"\n\t\t},\n\t\tarrowStrikethrough: false,\n\t\tarrows: {\n\t\t\tfrom: {\n\t\t\t\tenabled: true,\n\t\t\t\ttype: \"triangle\"\n\n\t\t\t}\n\t\t}\n\t},\n\tnodes: {\n\t\tchosen: false,\n\t\tcolor: {\n\t\t\tbackground: \"#5c6470\",\n\t\t\tborder: \"#fff\",\n\t\t\thover: {\n\t\t\t\tbackground: \"#f39200\",\n\t\t\t\tborder: \"#fff\",\n\t\t\t}\n\t\t},\n\t\tshape: \"dot\",\n\t\tsize: 10,\n\t\tborderWidth: 2,\n    labelHighlightBold: false,\n\t\tfont: {\n\t\t\tcolor: \"#393e46\",\n\t\t\tstrokeWidth: 2,\n\t\t\tsize: 15\n\t\t}\n\t},\n\tphysics: {\n\t\thierarchicalRepulsion: {\n\t\t\tdamping: .1,\n\t\t\tspringLength: 200\n\t\t},\n\t\tsolver: \"hierarchicalRepulsion\",\n\t\tminVelocity: .15\n\t},\n};\n","// material ui\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"stretch\",\n  },\n  bar: {\n      margin: theme.spacing(3),\n  },\n}));\n\nconst SearchBar = ({keyword, setKeyword}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        variant=\"outlined\"\n        label=\"Filter dependencies\"\n        className={classes.bar}\n        onChange={(e) => setKeyword(e.target.value)}\n      />\n    </div>\n  );\n}\n\nexport default SearchBar\n","// react\nimport React, { useEffect, useRef } from \"react\";\n\n// utils and configs\nimport { recurseToRoot } from \"../utils/recurseToRoot\"\nimport { options } from \"../configs/networkOptions\"\n\n// vis-network\nimport { Network } from \"vis-network/standalone/esm/vis-network\";\n\n// material ui\nimport SearchBar from \"../components/SearchBar\"\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n// styling\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n      margin: theme.spacing(6),\n      display: \"flex\",\n      flexFlow: \"column\",\n      flexGrow: 1\n  },\n  root: {\n    display: \"flex\",\n    flexFlow: \"column nowrap\",\n    minHeight: \"100vh\"\n  },\n  canvas: {\n    flex: \"1 1 auto\",\n    height: \"75vh\"\n  }\n}));\n\n\nconst NetworkGraph = (data, searchText) => {\n  const visJsRef = useRef(null);\n  const classes = useStyles();\n  let network = null\n\n  useEffect(() => {\n    network = visJsRef.current && new Network(visJsRef.current, data.data, options)\n\n    // set root node to have specific color\n    const root = data.data.nodes.get(0)\n    root.color = \"#4fc1ea\"\n    root.font = {color: \"#4fc1ea\", strokeWidth: 3, size: 20}\n    data.data.nodes.updateOnly(root)\n\n    // change curser when hovering and grabbing\n    // Get the canvas HTML element\n    var networkCanvas = document\n      .getElementById(\"mynetwork\")\n      .getElementsByTagName(\"canvas\")[0];\n\n    // changes the curser graphic depedning on where and what the mouse is doing\n    function changeCursor(newCursorStyle) {\n      networkCanvas.style.cursor = newCursorStyle;\n    }\n    network.on(\"hoverNode\", function () {\n      changeCursor(\"grab\");\n    });\n    network.on(\"blurNode\", function () {\n      changeCursor(\"default\");\n    });\n    network.on(\"dragStart\", function () {\n      changeCursor(\"grabbing\");\n    });\n    network.on(\"dragging\", function () {\n      changeCursor(\"grabbing\");\n    });\n    network.on(\"dragEnd\", function () {\n      changeCursor(\"grab\");\n    });\n\n    // fix (stick in place) node when done dragging\n    network.on(\"dragEnd\", function(params) {\n      if (params.nodes.length !== 0) {\n        network.editNode(params.nodes[0])\n      }\n    });\n\n    // un stick node if already stuck\n    network.on(\"dragStart\", function(params) {\n      // check if node has not been touched or is fixed\n      // if fixed then un fix\n      if (params.nodes.length !== 0 &&\n        network.body.nodes[params.nodes[0]].options.x !== undefined &&\n        network.body.nodes[params.nodes[0]].options.x) {\n        // un fix node\n        network.editNode(params.nodes[0])\n      }\n    });\n  }, [visJsRef, data.data, network]);\n\n\n  // recursivly finds all paths from search result to root\n  const handleSearch = (query, data, network) => {\n    // clear selection if empty search bar\n    data.data.nodes.updateOnly(data.data.nodes.get().map(e => {\n      if(e.id !== 0) {\n        e[\"color\"] = options.nodes.color\n        e[\"font\"] = options.nodes.font\n      }\n      return(e)\n    }));\n\n    // reset edge colors\n    data.data.edges.updateOnly(data.data.edges.get().map(e => {\n      e[\"color\"] = options.edges.color\n      return(e)\n    }));\n\n    if(query === \"\") {\n      // reset node colors\n      return\n    }\n\n    // use input text to find possible results\n    let possible_results = data.data.nodes.get({\n      filter: function (node) {\n        return (node.label.includes(query));\n      }\n    })\n\n    // recurse through possible results\n    const selected = recurseToRoot(possible_results.map(node => node.label), 0, data.data.edges.map(e => e))\n\n    // grey out non search results\n    // nodes that are not in search results\n    const unselected_edges = data.data.edges.get().filter(edge => !selected.edges.includes(edge.id)).map(e => {\n      e[\"color\"] = { color: \"#e3e5e8\" }\n      return(e)\n    })\n\n    // edges that are not in search results\n    const unselected_nodes = data.data.nodes.get().filter(node => !selected.nodes.includes(node.id)).map(e => {\n      if(e.id !== 0) {\n        e[\"color\"] = { background: \"#e3e5e8\" }\n        e[\"font\"] = {color: \"#e3e5e8\", strokeWidth: 2, size: 15}\n      }\n      return(e)\n    })\n\n    // set searched nodes to a different color\n    possible_results = possible_results.map(e => {\n      e[\"color\"] = { background: \"#f39200\" }\n      return(e)\n    })\n\n    // update nodes and edges in the dataset\n    data.data.nodes.updateOnly(unselected_nodes.concat(possible_results));\n    data.data.edges.updateOnly(unselected_edges);\n\n  }\n\n  return(\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <SearchBar setKeyword={(text) => handleSearch(text, data, network) } />\n        <div ref = { visJsRef } id = \"mynetwork\" className={classes.canvas}/>\n      </Paper>\n    </div>\n\n  );\n};\n\nexport default NetworkGraph;\n","import { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nexport const themeLight = createMuiTheme({\n  palette: {\n    background: {\n      default: \"#f9f9f9\"\n    }\n  }\n});\n","// local components\nimport NetworkGraph from \"./components/NetworkGraph\"\n\n// local utils and configs\nimport { getScaleFreeNetwork } from \"./utils/getScaleFreeNetwork\"\nimport { themeLight } from \"./configs/theme\"\n\n// material ui\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n\nfunction App() {\n  // construct sample NetworkGraph\n  const data = getScaleFreeNetwork(100)\n\n  return (\n    <MuiThemeProvider theme={themeLight}>\n      <CssBaseline />\n        <NetworkGraph data={data}/>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import { DataSet } from \"vis-network/standalone/esm/vis-network\";\n\n\nexport function getScaleFreeNetwork(nodeCount) {\n  const nodes = [];\n  const edges = [];\n  const connectionCount = [];\n\n  // randomly create some nodes and edges\n  for (let i = 0; i < nodeCount; i++) {\n    nodes.push({\n      id: i,\n      label: String(i),\n    });\n\n    connectionCount[i] = 0;\n\n    // create edges in a scale-free-network way\n    if (i === 1) {\n      const from = i;\n      const to = 0;\n      edges.push({\n        from: from,\n        to: to,\n      });\n      connectionCount[from]++;\n      connectionCount[to]++;\n    } else if (i > 1) {\n      const conn = edges.length * 2;\n      const rand = Math.floor(Math.random() * conn);\n      let cum = 0;\n      let j = 0;\n      while (j < connectionCount.length && cum < rand) {\n        cum += connectionCount[j];\n        j++;\n      }\n\n      const from = i;\n      const to = j;\n      edges.push({\n        from: from,\n        to: to,\n      });\n      connectionCount[from]++;\n      connectionCount[to]++;\n    }\n  }\n\n  return {\n    nodes: new DataSet(nodes),\n    edges: new DataSet(edges)\n  };\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}